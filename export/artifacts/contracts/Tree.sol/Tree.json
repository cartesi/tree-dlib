{
  "contractName": "Tree",
  "sourceName": "contracts/Tree.sol",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_parent",
          "type": "uint256"
        }
      ],
      "name": "VertexInserted",
      "type": "event"
    }
  ],
  "bytecode": "0x6109e261003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100875760003560e01c80636af5673e116100655780636af5673e146100ff5780636ca00e4c1461011e5780639d26337214610131578063ebcdb8721461015157600080fd5b806301b2a42d1461008c57806333fefb37146100b2578063694884b6146100c5575b600080fd5b61009f61009a366004610704565b610164565b6040519081526020015b60405180910390f35b61009f6100c0366004610726565b61017e565b6100ea6100d3366004610752565b5463ffffffff808216926401000000009092041690565b604080519283526020830191909152016100a9565b61009f61010d366004610752565b54600160401b900463ffffffff1690565b61009f61012c366004610704565b610216565b81801561013d57600080fd5b5061009f61014c366004610704565b61025c565b61009f61015f366004610726565b6103af565b60006101708383610216565b5463ffffffff169392505050565b8254600090600160401b900463ffffffff1683106101b75760405162461bcd60e51b81526004016101ae9061076b565b60405180910390fd5b60008381526001850160205260408120906101d36008856107ce565b905060006101e26008866107e2565b905060006101f18260206107f6565b600093845260019094016020525050604090205463ffffffff911c1690509392505050565b8154600090600160401b900463ffffffff1682106102465760405162461bcd60e51b81526004016101ae9061076b565b5060009081526001919091016020526040902090565b8154600090600160401b900463ffffffff168084600861027b83610815565b825463ffffffff9182166101009390930a928302919092021990911617905550600081815260018501602052604090208115610323578184106103005760405162461bcd60e51b815260206004820152601e60248201527f706172656e7420696e646578206578636565647320747265652073697a65000060448201526064016101ae565b600084815260018601602052604090205463ffffffff1661032182826104e7565b505b8054855463ffffffff918216916401000000009091041681111561037257855467ffffffffffffffff191664010000000063ffffffff8381169190910263ffffffff1916919091179084161786555b6040518581527ffe0c8c4e3d6360493265394a5a45cb3affdf2119a8b04640ea666dbd217e4f2f9060200160405180910390a15090949350505050565b8254600090600160401b900463ffffffff1683106103df5760405162461bcd60e51b81526004016101ae9061076b565b600083815260018501602052604090205463ffffffff168211156104455760405162461bcd60e51b815260206004820152601b60248201527f736561726368206465707468203e20766572746578206465707468000000000060448201526064016101ae565b825b600081815260018601602052604090205463ffffffff1683146104df5760008181526001868101602052604082208054909264010000000090910463ffffffff16918491906104969084610838565b90505b828110156104d6576104ac89838361017e565b600081815260018b01602052604090205490955063ffffffff168711156104d65760001901610499565b50505050610447565b949350505050565b60006104fc6104f783600161084f565b6105e0565b905060005b81518110156105a7576000805b60088110801561052757508351610525828561084f565b105b15610571576105378160206107f6565b84610542838661084f565b8151811061055257610552610867565b6020026020010151901b821791508061056a9061087d565b905061050e565b816001870160006105836008876107ce565b815260208101919091526040016000205561059e818461084f565b92505050610501565b6105b283600161084f565b8454925163ffffffff9081166401000000000267ffffffffffffffff19909416911617919091179092555050565b606060006105ef600184610838565b9050600160005b600481101561066b57600060405180610120016040528061010081526020016108ad61010091396106288360086107f6565b85901c60ff168151811061063e5761063e610867565b016020015160f81c9050610652818461084f565b925080600814610662575061066b565b506001016105f6565b5060008167ffffffffffffffff81111561068757610687610896565b6040519080825280602002602001820160405280156106b0578160200160208202803683370190505b50905060005b828110156106fb57838282815181106106d1576106d1610867565b60209081029190910101526106e781600161084f565b63ffffffff901b93909316926001016106b6565b50949350505050565b6000806040838503121561071757600080fd5b50508035926020909101359150565b60008060006060848603121561073b57600080fd5b505081359360208301359350604090920135919050565b60006020828403121561076457600080fd5b5035919050565b6020808252601e908201527f76657274657820696e646578206578636565647320747265652073697a650000604082015260600190565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000826107dd576107dd6107a2565b500490565b6000826107f1576107f16107a2565b500690565b6000816000190483118215151615610810576108106107b8565b500290565b600063ffffffff80831681810361082e5761082e6107b8565b6001019392505050565b60008282101561084a5761084a6107b8565b500390565b60008219821115610862576108626107b8565b500190565b634e487b7160e01b600052603260045260246000fd5b60006001820161088f5761088f6107b8565b5060010190565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220a22771bc53e3863b88929acbd477283641f35ce9793a0ee6040018571d6e206164736f6c634300080f0033",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600436106100875760003560e01c80636af5673e116100655780636af5673e146100ff5780636ca00e4c1461011e5780639d26337214610131578063ebcdb8721461015157600080fd5b806301b2a42d1461008c57806333fefb37146100b2578063694884b6146100c5575b600080fd5b61009f61009a366004610704565b610164565b6040519081526020015b60405180910390f35b61009f6100c0366004610726565b61017e565b6100ea6100d3366004610752565b5463ffffffff808216926401000000009092041690565b604080519283526020830191909152016100a9565b61009f61010d366004610752565b54600160401b900463ffffffff1690565b61009f61012c366004610704565b610216565b81801561013d57600080fd5b5061009f61014c366004610704565b61025c565b61009f61015f366004610726565b6103af565b60006101708383610216565b5463ffffffff169392505050565b8254600090600160401b900463ffffffff1683106101b75760405162461bcd60e51b81526004016101ae9061076b565b60405180910390fd5b60008381526001850160205260408120906101d36008856107ce565b905060006101e26008866107e2565b905060006101f18260206107f6565b600093845260019094016020525050604090205463ffffffff911c1690509392505050565b8154600090600160401b900463ffffffff1682106102465760405162461bcd60e51b81526004016101ae9061076b565b5060009081526001919091016020526040902090565b8154600090600160401b900463ffffffff168084600861027b83610815565b825463ffffffff9182166101009390930a928302919092021990911617905550600081815260018501602052604090208115610323578184106103005760405162461bcd60e51b815260206004820152601e60248201527f706172656e7420696e646578206578636565647320747265652073697a65000060448201526064016101ae565b600084815260018601602052604090205463ffffffff1661032182826104e7565b505b8054855463ffffffff918216916401000000009091041681111561037257855467ffffffffffffffff191664010000000063ffffffff8381169190910263ffffffff1916919091179084161786555b6040518581527ffe0c8c4e3d6360493265394a5a45cb3affdf2119a8b04640ea666dbd217e4f2f9060200160405180910390a15090949350505050565b8254600090600160401b900463ffffffff1683106103df5760405162461bcd60e51b81526004016101ae9061076b565b600083815260018501602052604090205463ffffffff168211156104455760405162461bcd60e51b815260206004820152601b60248201527f736561726368206465707468203e20766572746578206465707468000000000060448201526064016101ae565b825b600081815260018601602052604090205463ffffffff1683146104df5760008181526001868101602052604082208054909264010000000090910463ffffffff16918491906104969084610838565b90505b828110156104d6576104ac89838361017e565b600081815260018b01602052604090205490955063ffffffff168711156104d65760001901610499565b50505050610447565b949350505050565b60006104fc6104f783600161084f565b6105e0565b905060005b81518110156105a7576000805b60088110801561052757508351610525828561084f565b105b15610571576105378160206107f6565b84610542838661084f565b8151811061055257610552610867565b6020026020010151901b821791508061056a9061087d565b905061050e565b816001870160006105836008876107ce565b815260208101919091526040016000205561059e818461084f565b92505050610501565b6105b283600161084f565b8454925163ffffffff9081166401000000000267ffffffffffffffff19909416911617919091179092555050565b606060006105ef600184610838565b9050600160005b600481101561066b57600060405180610120016040528061010081526020016108ad61010091396106288360086107f6565b85901c60ff168151811061063e5761063e610867565b016020015160f81c9050610652818461084f565b925080600814610662575061066b565b506001016105f6565b5060008167ffffffffffffffff81111561068757610687610896565b6040519080825280602002602001820160405280156106b0578160200160208202803683370190505b50905060005b828110156106fb57838282815181106106d1576106d1610867565b60209081029190910101526106e781600161084f565b63ffffffff901b93909316926001016106b6565b50949350505050565b6000806040838503121561071757600080fd5b50508035926020909101359150565b60008060006060848603121561073b57600080fd5b505081359360208301359350604090920135919050565b60006020828403121561076457600080fd5b5035919050565b6020808252601e908201527f76657274657820696e646578206578636565647320747265652073697a650000604082015260600190565b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000826107dd576107dd6107a2565b500490565b6000826107f1576107f16107a2565b500690565b6000816000190483118215151615610810576108106107b8565b500290565b600063ffffffff80831681810361082e5761082e6107b8565b6001019392505050565b60008282101561084a5761084a6107b8565b500390565b60008219821115610862576108626107b8565b500190565b634e487b7160e01b600052603260045260246000fd5b60006001820161088f5761088f6107b8565b5060010190565b634e487b7160e01b600052604160045260246000fdfea2646970667358221220a22771bc53e3863b88929acbd477283641f35ce9793a0ee6040018571d6e206164736f6c634300080f0033",
  "linkReferences": {},
  "deployedLinkReferences": {},
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getAncestor(Tree.TreeCtx storage,uint256,uint256)": {
        "params": {
          "_ancestorOffset": "the offset of the ancestor in ancestor map",
          "_tree": "pointer to the tree storage",
          "_vertex": "the index of the vertex in the vertices map (tree)"
        },
        "returns": {
          "_0": "index of ancestor vertex in the tree"
        }
      },
      "getAncestorAtDepth(Tree.TreeCtx storage,uint256,uint256)": {
        "params": {
          "_depth": "the depth of the ancestor",
          "_tree": "pointer to the tree storage",
          "_vertex": "the index of the vertex in the vertices map (tree)"
        },
        "returns": {
          "_0": "index of ancestor at depth of _vertex"
        }
      },
      "getDeepest(Tree.TreeCtx storage)": {
        "params": {
          "_tree": "pointer to the tree storage"
        },
        "returns": {
          "_0": "index number and depth of the deepest vertex"
        }
      },
      "getDepth(Tree.TreeCtx storage,uint256)": {
        "params": {
          "_tree": "pointer to the tree storage",
          "_vertex": "the index of the vertex in the vertices map (tree)"
        }
      },
      "getTreeSize(Tree.TreeCtx storage)": {
        "params": {
          "_tree": "pointer to the tree storage"
        }
      },
      "getVertex(Tree.TreeCtx storage,uint256)": {
        "params": {
          "_tree": "pointer to the tree storage",
          "_vertex": "the index of the vertex in the vertices map (tree)"
        }
      },
      "insertVertex(Tree.TreeCtx storage,uint256)": {
        "params": {
          "_parent": "the index of parent vertex in the vertices map (tree)",
          "_tree": "pointer to the tree storage"
        },
        "returns": {
          "_0": "index of the inserted vertex"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "getAncestor(Tree.TreeCtx storage,uint256,uint256)": {
        "notice": "Get an ancestor of a vertex in the tree with a certain ancestor offset"
      },
      "getAncestorAtDepth(Tree.TreeCtx storage,uint256,uint256)": {
        "notice": "Search an ancestor of a vertex in the tree at a certain depth"
      },
      "getDeepest(Tree.TreeCtx storage)": {
        "notice": "Get current tree size"
      },
      "getDepth(Tree.TreeCtx storage,uint256)": {
        "notice": "Get depth of vertex"
      },
      "getTreeSize(Tree.TreeCtx storage)": {
        "notice": "Get current tree size"
      },
      "getVertex(Tree.TreeCtx storage,uint256)": {
        "notice": "Get vertex from the tree"
      },
      "insertVertex(Tree.TreeCtx storage,uint256)": {
        "notice": "Insert a vertex to the tree"
      }
    },
    "version": 1
  },
  "evm": {
    "gasEstimates": {
      "creation": {
        "codeDepositCost": "506000",
        "executionCost": "574",
        "totalCost": "506574"
      },
      "external": {
        "getAncestor(Tree.TreeCtx storage,uint256,uint256)": "4989",
        "getAncestorAtDepth(Tree.TreeCtx storage,uint256,uint256)": "infinite",
        "getDeepest(Tree.TreeCtx storage)": "2454",
        "getDepth(Tree.TreeCtx storage,uint256)": "4664",
        "getTreeSize(Tree.TreeCtx storage)": "2365",
        "getVertex(Tree.TreeCtx storage,uint256)": "2534",
        "insertVertex(Tree.TreeCtx storage,uint256)": "infinite"
      },
      "internal": {
        "batchSetAncestors(struct Tree.Vertex storage pointer,uint256)": "infinite",
        "getRequiredDepths(uint256)": "infinite"
      }
    },
    "methodIdentifiers": {
      "getAncestor(Tree.TreeCtx storage,uint256,uint256)": "33fefb37",
      "getAncestorAtDepth(Tree.TreeCtx storage,uint256,uint256)": "ebcdb872",
      "getDeepest(Tree.TreeCtx storage)": "694884b6",
      "getDepth(Tree.TreeCtx storage,uint256)": "01b2a42d",
      "getTreeSize(Tree.TreeCtx storage)": "6af5673e",
      "getVertex(Tree.TreeCtx storage,uint256)": "6ca00e4c",
      "insertVertex(Tree.TreeCtx storage,uint256)": "9d263372"
    }
  }
}