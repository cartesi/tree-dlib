{
  "contractName": "Tree",
  "sourceName": "contracts/Tree.sol",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint32",
          "name": "_parent",
          "type": "uint32"
        }
      ],
      "name": "VertexInserted",
      "type": "event"
    }
  ],
  "bytecode": "0x610d7b61003a600b82828239805160001a60731461002d57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061006c5760003560e01c8063202449aa14610071578063506923c1146100ab578063694884b6146100be5780636af5673e146101035780636b5feffa146101155780638835022c14610135575b600080fd5b81801561007d57600080fd5b5061009161008c366004610a45565b610148565b60405163ffffffff90911681526020015b60405180910390f35b6100916100b9366004610a79565b61045b565b6100e66100cc366004610a2d565b6001015463ffffffff808216926401000000009092041690565b6040805163ffffffff9384168152929091166020830152016100a2565b610091610111366004610a2d565b5490565b610128610123366004610a79565b610472565b6040516100a29190610b1c565b610091610143366004610aa4565b61058c565b604080518082019091526060815260006020820181905290845463ffffffff8116610192576040805160008183018181526060830190935291815260208101919091529150610376565b8063ffffffff168463ffffffff16106102015760405162461bcd60e51b815260206004820152602660248201527f706172656e7420696e64657820657863656564732063757272656e7420747265604482015265652073697a6560d01b60648201526084015b60405180910390fd5b6000866000018563ffffffff168154811061022c57634e487b7160e01b600052603260045260246000fd5b600091825260208220600160029092020181015463ffffffff16925061025c90610257908490610b84565b6107bc565b90506000815167ffffffffffffffff81111561028857634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156102b1578160200160208202803683370190505b50905060005b82518163ffffffff161015610349576102fe8a89858463ffffffff16815181106102f157634e487b7160e01b600052603260045260246000fd5b602002602001015161058c565b828263ffffffff168151811061032457634e487b7160e01b600052603260045260246000fd5b63ffffffff9092166020928302919091019091015261034281610c0b565b90506102b7565b5060405180604001604052808281526020018460016103689190610b84565b63ffffffff16905294505050505b85546001810187556000878152602090819020845180518694600202909201926103a592849290910190610950565b506020918201516001918201805463ffffffff191663ffffffff928316179055908801549184015164010000000090920481169116111561041757602082015160018701805467ffffffffffffffff191664010000000063ffffffff9384160263ffffffff1916179183169190911790555b60405163ffffffff8516815285907f4f53fe376c2872b56e39c47051086455afd7d2cf37e194e8a7ad038197c43cc59060200160405180910390a295945050505050565b60006104678383610472565b602001519392505050565b604080518082019091526060815260006020820152825463ffffffff8316106104ad5760405162461bcd60e51b81526004016101f890610ad6565b826000018263ffffffff16815481106104d657634e487b7160e01b600052603260045260246000fd5b90600052602060002090600202016040518060400160405290816000820180548060200260200160405190810160405280929190818152602001828054801561056a57602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff168152602001906004019060208260030104928301926001038202915080841161052d5790505b50505091835250506001919091015463ffffffff166020909101529392505050565b825460009063ffffffff8416106105b55760405162461bcd60e51b81526004016101f890610ad6565b836000018363ffffffff16815481106105de57634e487b7160e01b600052603260045260246000fd5b600091825260209091206001600290920201015463ffffffff90811690831611156106595760405162461bcd60e51b815260206004820152602560248201527f73656172636820646570746820646565706572207468616e20766572746578206044820152640c8cae0e8d60db1b60648201526084016101f8565b825b846000018163ffffffff168154811061068457634e487b7160e01b600052603260045260246000fd5b600091825260209091206001600290920201015463ffffffff8481169116146107b4576000856000018263ffffffff16815481106106d257634e487b7160e01b600052603260045260246000fd5b60009182526020909120600290910201805490915060001981015b8163ffffffff168163ffffffff1610156107ac57828163ffffffff168154811061072757634e487b7160e01b600052603260045260246000fd5b90600052602060002090600891828204019190066004029054906101000a900463ffffffff1693508563ffffffff16886000018563ffffffff168154811061077f57634e487b7160e01b600052603260045260246000fd5b600091825260209091206001600290920201015463ffffffff16106107a3576107ac565b600019016106ed565b50505061065b565b949350505050565b606060006107cb600184610bcb565b9050600160005b600481101561086f5760006040518061012001604052806101008152602001610c466101009139610804836008610bac565b8563ffffffff16901c60ff1663ffffffff168151811061083457634e487b7160e01b600052603260045260246000fd5b016020015160f81c90506108488184610b84565b92508063ffffffff1660081461085e575061086f565b5061086881610bf0565b90506107d2565b5060008163ffffffff1667ffffffffffffffff81111561089f57634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156108c8578160200160208202803683370190505b50905060005b8263ffffffff168163ffffffff1610156109475783828263ffffffff168151811061090957634e487b7160e01b600052603260045260246000fd5b63ffffffff90921660209283029190910190910152610929816001610b84565b63ffffffff9081161b939093169261094081610c0b565b90506108ce565b50949350505050565b828054828255906000526020600020906007016008900481019282156109ef5791602002820160005b838211156109bd57835183826101000a81548163ffffffff021916908363ffffffff1602179055509260200192600401602081600301049283019260010302610979565b80156109ed5782816101000a81549063ffffffff02191690556004016020816003010492830192600103026109bd565b505b506109fb9291506109ff565b5090565b5b808211156109fb5760008155600101610a00565b803563ffffffff81168114610a2857600080fd5b919050565b600060208284031215610a3e578081fd5b5035919050565b600080600060608486031215610a59578182fd5b8335925060208401359150610a7060408501610a14565b90509250925092565b60008060408385031215610a8b578182fd5b82359150610a9b60208401610a14565b90509250929050565b600080600060608486031215610ab8578283fd5b83359250610ac860208501610a14565b9150610a7060408501610a14565b60208082526026908201527f76657274657820696e64657820657863656564732063757272656e7420747265604082015265652073697a6560d01b606082015260800190565b6020808252825160408383015280516060840181905260009291820190839060808601905b80831015610b6757835163ffffffff168252928401926001929092019190840190610b41565b5063ffffffff848801511660408701528094505050505092915050565b600063ffffffff808316818516808303821115610ba357610ba3610c2f565b01949350505050565b6000816000190483118215151615610bc657610bc6610c2f565b500290565b600063ffffffff83811690831681811015610be857610be8610c2f565b039392505050565b6000600019821415610c0457610c04610c2f565b5060010190565b600063ffffffff80831681811415610c2557610c25610c2f565b6001019392505050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220a8cd1bcf4cb1800c77d3cc0f291ea10dd652e5e2ab37b3dd54bd61a52cbc9d3c64736f6c63430008040033",
  "deployedBytecode": "0x730000000000000000000000000000000000000000301460806040526004361061006c5760003560e01c8063202449aa14610071578063506923c1146100ab578063694884b6146100be5780636af5673e146101035780636b5feffa146101155780638835022c14610135575b600080fd5b81801561007d57600080fd5b5061009161008c366004610a45565b610148565b60405163ffffffff90911681526020015b60405180910390f35b6100916100b9366004610a79565b61045b565b6100e66100cc366004610a2d565b6001015463ffffffff808216926401000000009092041690565b6040805163ffffffff9384168152929091166020830152016100a2565b610091610111366004610a2d565b5490565b610128610123366004610a79565b610472565b6040516100a29190610b1c565b610091610143366004610aa4565b61058c565b604080518082019091526060815260006020820181905290845463ffffffff8116610192576040805160008183018181526060830190935291815260208101919091529150610376565b8063ffffffff168463ffffffff16106102015760405162461bcd60e51b815260206004820152602660248201527f706172656e7420696e64657820657863656564732063757272656e7420747265604482015265652073697a6560d01b60648201526084015b60405180910390fd5b6000866000018563ffffffff168154811061022c57634e487b7160e01b600052603260045260246000fd5b600091825260208220600160029092020181015463ffffffff16925061025c90610257908490610b84565b6107bc565b90506000815167ffffffffffffffff81111561028857634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156102b1578160200160208202803683370190505b50905060005b82518163ffffffff161015610349576102fe8a89858463ffffffff16815181106102f157634e487b7160e01b600052603260045260246000fd5b602002602001015161058c565b828263ffffffff168151811061032457634e487b7160e01b600052603260045260246000fd5b63ffffffff9092166020928302919091019091015261034281610c0b565b90506102b7565b5060405180604001604052808281526020018460016103689190610b84565b63ffffffff16905294505050505b85546001810187556000878152602090819020845180518694600202909201926103a592849290910190610950565b506020918201516001918201805463ffffffff191663ffffffff928316179055908801549184015164010000000090920481169116111561041757602082015160018701805467ffffffffffffffff191664010000000063ffffffff9384160263ffffffff1916179183169190911790555b60405163ffffffff8516815285907f4f53fe376c2872b56e39c47051086455afd7d2cf37e194e8a7ad038197c43cc59060200160405180910390a295945050505050565b60006104678383610472565b602001519392505050565b604080518082019091526060815260006020820152825463ffffffff8316106104ad5760405162461bcd60e51b81526004016101f890610ad6565b826000018263ffffffff16815481106104d657634e487b7160e01b600052603260045260246000fd5b90600052602060002090600202016040518060400160405290816000820180548060200260200160405190810160405280929190818152602001828054801561056a57602002820191906000526020600020906000905b82829054906101000a900463ffffffff1663ffffffff168152602001906004019060208260030104928301926001038202915080841161052d5790505b50505091835250506001919091015463ffffffff166020909101529392505050565b825460009063ffffffff8416106105b55760405162461bcd60e51b81526004016101f890610ad6565b836000018363ffffffff16815481106105de57634e487b7160e01b600052603260045260246000fd5b600091825260209091206001600290920201015463ffffffff90811690831611156106595760405162461bcd60e51b815260206004820152602560248201527f73656172636820646570746820646565706572207468616e20766572746578206044820152640c8cae0e8d60db1b60648201526084016101f8565b825b846000018163ffffffff168154811061068457634e487b7160e01b600052603260045260246000fd5b600091825260209091206001600290920201015463ffffffff8481169116146107b4576000856000018263ffffffff16815481106106d257634e487b7160e01b600052603260045260246000fd5b60009182526020909120600290910201805490915060001981015b8163ffffffff168163ffffffff1610156107ac57828163ffffffff168154811061072757634e487b7160e01b600052603260045260246000fd5b90600052602060002090600891828204019190066004029054906101000a900463ffffffff1693508563ffffffff16886000018563ffffffff168154811061077f57634e487b7160e01b600052603260045260246000fd5b600091825260209091206001600290920201015463ffffffff16106107a3576107ac565b600019016106ed565b50505061065b565b949350505050565b606060006107cb600184610bcb565b9050600160005b600481101561086f5760006040518061012001604052806101008152602001610c466101009139610804836008610bac565b8563ffffffff16901c60ff1663ffffffff168151811061083457634e487b7160e01b600052603260045260246000fd5b016020015160f81c90506108488184610b84565b92508063ffffffff1660081461085e575061086f565b5061086881610bf0565b90506107d2565b5060008163ffffffff1667ffffffffffffffff81111561089f57634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156108c8578160200160208202803683370190505b50905060005b8263ffffffff168163ffffffff1610156109475783828263ffffffff168151811061090957634e487b7160e01b600052603260045260246000fd5b63ffffffff90921660209283029190910190910152610929816001610b84565b63ffffffff9081161b939093169261094081610c0b565b90506108ce565b50949350505050565b828054828255906000526020600020906007016008900481019282156109ef5791602002820160005b838211156109bd57835183826101000a81548163ffffffff021916908363ffffffff1602179055509260200192600401602081600301049283019260010302610979565b80156109ed5782816101000a81549063ffffffff02191690556004016020816003010492830192600103026109bd565b505b506109fb9291506109ff565b5090565b5b808211156109fb5760008155600101610a00565b803563ffffffff81168114610a2857600080fd5b919050565b600060208284031215610a3e578081fd5b5035919050565b600080600060608486031215610a59578182fd5b8335925060208401359150610a7060408501610a14565b90509250925092565b60008060408385031215610a8b578182fd5b82359150610a9b60208401610a14565b90509250929050565b600080600060608486031215610ab8578283fd5b83359250610ac860208501610a14565b9150610a7060408501610a14565b60208082526026908201527f76657274657820696e64657820657863656564732063757272656e7420747265604082015265652073697a6560d01b606082015260800190565b6020808252825160408383015280516060840181905260009291820190839060808601905b80831015610b6757835163ffffffff168252928401926001929092019190840190610b41565b5063ffffffff848801511660408701528094505050505092915050565b600063ffffffff808316818516808303821115610ba357610ba3610c2f565b01949350505050565b6000816000190483118215151615610bc657610bc6610c2f565b500290565b600063ffffffff83811690831681811015610be857610be8610c2f565b039392505050565b6000600019821415610c0457610c04610c2f565b5060010190565b600063ffffffff80831681811415610c2557610c25610c2f565b6001019392505050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220a8cd1bcf4cb1800c77d3cc0f291ea10dd652e5e2ab37b3dd54bd61a52cbc9d3c64736f6c63430008040033",
  "linkReferences": {},
  "deployedLinkReferences": {},
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getAncestorAtDepth(Tree.TreeCtx storage,uint32,uint32)": {
        "params": {
          "_depth": "the depth of the ancestor",
          "_tree": "pointer to the tree storage",
          "_vertex": "the index of the vertex in the vertices array (tree)"
        },
        "returns": {
          "_0": "index of ancestor at depth of _vertex"
        }
      },
      "getDeepest(Tree.TreeCtx storage)": {
        "params": {
          "_tree": "pointer to the tree storage"
        },
        "returns": {
          "_0": "index number and depth of the deepest vertex"
        }
      },
      "getDepth(Tree.TreeCtx storage,uint32)": {
        "params": {
          "_tree": "pointer to the tree storage",
          "_vertex": "the index of the vertex in the vertices array (tree)"
        }
      },
      "getTreeSize(Tree.TreeCtx storage)": {
        "params": {
          "_tree": "pointer to the tree storage"
        }
      },
      "getVertex(Tree.TreeCtx storage,uint32)": {
        "params": {
          "_tree": "pointer to the tree storage",
          "_vertex": "the index of the vertex in the vertices array (tree)"
        }
      },
      "insertVertex(Tree.TreeCtx storage,uint256,uint32)": {
        "params": {
          "_id": "the identifier to differentiate each tree from caller contract",
          "_parent": "the index of parent vertex in the vertices array (tree)",
          "_tree": "pointer to the tree storage"
        },
        "returns": {
          "_0": "index of the inserted vertex"
        }
      }
    },
    "version": 1
  },
  "evm": {
    "bytecode": {
      "generatedSources": [],
      "linkReferences": {},
      "opcodes": "PUSH2 0xD7B PUSH2 0x3A PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH2 0x2D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x6C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x202449AA EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0x506923C1 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x694884B6 EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0x6AF5673E EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x6B5FEFFA EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0x8835022C EQ PUSH2 0x135 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x91 PUSH2 0x8C CALLDATASIZE PUSH1 0x4 PUSH2 0xA45 JUMP JUMPDEST PUSH2 0x148 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x91 PUSH2 0xB9 CALLDATASIZE PUSH1 0x4 PUSH2 0xA79 JUMP JUMPDEST PUSH2 0x45B JUMP JUMPDEST PUSH2 0xE6 PUSH2 0xCC CALLDATASIZE PUSH1 0x4 PUSH2 0xA2D JUMP JUMPDEST PUSH1 0x1 ADD SLOAD PUSH4 0xFFFFFFFF DUP1 DUP3 AND SWAP3 PUSH5 0x100000000 SWAP1 SWAP3 DIV AND SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP4 DUP5 AND DUP2 MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0xA2 JUMP JUMPDEST PUSH2 0x91 PUSH2 0x111 CALLDATASIZE PUSH1 0x4 PUSH2 0xA2D JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x128 PUSH2 0x123 CALLDATASIZE PUSH1 0x4 PUSH2 0xA79 JUMP JUMPDEST PUSH2 0x472 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0xB1C JUMP JUMPDEST PUSH2 0x91 PUSH2 0x143 CALLDATASIZE PUSH1 0x4 PUSH2 0xAA4 JUMP JUMPDEST PUSH2 0x58C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP1 DUP5 SLOAD PUSH4 0xFFFFFFFF DUP2 AND PUSH2 0x192 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 DUP4 ADD DUP2 DUP2 MSTORE PUSH1 0x60 DUP4 ADD SWAP1 SWAP4 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 POP PUSH2 0x376 JUMP JUMPDEST DUP1 PUSH4 0xFFFFFFFF AND DUP5 PUSH4 0xFFFFFFFF AND LT PUSH2 0x201 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x706172656E7420696E64657820657863656564732063757272656E7420747265 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x652073697A65 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP6 PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x22C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x2 SWAP1 SWAP3 MUL ADD DUP2 ADD SLOAD PUSH4 0xFFFFFFFF AND SWAP3 POP PUSH2 0x25C SWAP1 PUSH2 0x257 SWAP1 DUP5 SWAP1 PUSH2 0xB84 JUMP JUMPDEST PUSH2 0x7BC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x288 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2B1 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 PUSH4 0xFFFFFFFF AND LT ISZERO PUSH2 0x349 JUMPI PUSH2 0x2FE DUP11 DUP10 DUP6 DUP5 PUSH4 0xFFFFFFFF AND DUP2 MLOAD DUP2 LT PUSH2 0x2F1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x58C JUMP JUMPDEST DUP3 DUP3 PUSH4 0xFFFFFFFF AND DUP2 MLOAD DUP2 LT PUSH2 0x324 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH2 0x342 DUP2 PUSH2 0xC0B JUMP JUMPDEST SWAP1 POP PUSH2 0x2B7 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x1 PUSH2 0x368 SWAP2 SWAP1 PUSH2 0xB84 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND SWAP1 MSTORE SWAP5 POP POP POP POP JUMPDEST DUP6 SLOAD PUSH1 0x1 DUP2 ADD DUP8 SSTORE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 DUP5 MLOAD DUP1 MLOAD DUP7 SWAP5 PUSH1 0x2 MUL SWAP1 SWAP3 ADD SWAP3 PUSH2 0x3A5 SWAP3 DUP5 SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x950 JUMP JUMPDEST POP PUSH1 0x20 SWAP2 DUP3 ADD MLOAD PUSH1 0x1 SWAP2 DUP3 ADD DUP1 SLOAD PUSH4 0xFFFFFFFF NOT AND PUSH4 0xFFFFFFFF SWAP3 DUP4 AND OR SWAP1 SSTORE SWAP1 DUP9 ADD SLOAD SWAP2 DUP5 ADD MLOAD PUSH5 0x100000000 SWAP1 SWAP3 DIV DUP2 AND SWAP2 AND GT ISZERO PUSH2 0x417 JUMPI PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP8 ADD DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH5 0x100000000 PUSH4 0xFFFFFFFF SWAP4 DUP5 AND MUL PUSH4 0xFFFFFFFF NOT AND OR SWAP2 DUP4 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF DUP6 AND DUP2 MSTORE DUP6 SWAP1 PUSH32 0x4F53FE376C2872B56E39C47051086455AFD7D2CF37E194E8A7AD038197C43CC5 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x467 DUP4 DUP4 PUSH2 0x472 JUMP JUMPDEST PUSH1 0x20 ADD MLOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE DUP3 SLOAD PUSH4 0xFFFFFFFF DUP4 AND LT PUSH2 0x4AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F8 SWAP1 PUSH2 0xAD6 JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP3 PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x4D6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x56A JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x4 ADD SWAP1 PUSH1 0x20 DUP3 PUSH1 0x3 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB DUP3 MUL SWAP2 POP DUP1 DUP5 GT PUSH2 0x52D JUMPI SWAP1 POP JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH4 0xFFFFFFFF AND PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP3 SLOAD PUSH1 0x0 SWAP1 PUSH4 0xFFFFFFFF DUP5 AND LT PUSH2 0x5B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F8 SWAP1 PUSH2 0xAD6 JUMP JUMPDEST DUP4 PUSH1 0x0 ADD DUP4 PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x5DE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x1 PUSH1 0x2 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH4 0xFFFFFFFF SWAP1 DUP2 AND SWAP1 DUP4 AND GT ISZERO PUSH2 0x659 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73656172636820646570746820646565706572207468616E2076657274657820 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0xC8CAE0E8D PUSH1 0xDB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F8 JUMP JUMPDEST DUP3 JUMPDEST DUP5 PUSH1 0x0 ADD DUP2 PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x684 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x1 PUSH1 0x2 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH4 0xFFFFFFFF DUP5 DUP2 AND SWAP2 AND EQ PUSH2 0x7B4 JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD DUP3 PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x6D2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 NOT DUP2 ADD JUMPDEST DUP2 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND LT ISZERO PUSH2 0x7AC JUMPI DUP3 DUP2 PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x727 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x4 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP4 POP DUP6 PUSH4 0xFFFFFFFF AND DUP9 PUSH1 0x0 ADD DUP6 PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x77F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x1 PUSH1 0x2 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH4 0xFFFFFFFF AND LT PUSH2 0x7A3 JUMPI PUSH2 0x7AC JUMP JUMPDEST PUSH1 0x0 NOT ADD PUSH2 0x6ED JUMP JUMPDEST POP POP POP PUSH2 0x65B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x7CB PUSH1 0x1 DUP5 PUSH2 0xBCB JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x0 JUMPDEST PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x86F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x100 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC46 PUSH2 0x100 SWAP2 CODECOPY PUSH2 0x804 DUP4 PUSH1 0x8 PUSH2 0xBAC JUMP JUMPDEST DUP6 PUSH4 0xFFFFFFFF AND SWAP1 SHR PUSH1 0xFF AND PUSH4 0xFFFFFFFF AND DUP2 MLOAD DUP2 LT PUSH2 0x834 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 SHR SWAP1 POP PUSH2 0x848 DUP2 DUP5 PUSH2 0xB84 JUMP JUMPDEST SWAP3 POP DUP1 PUSH4 0xFFFFFFFF AND PUSH1 0x8 EQ PUSH2 0x85E JUMPI POP PUSH2 0x86F JUMP JUMPDEST POP PUSH2 0x868 DUP2 PUSH2 0xBF0 JUMP JUMPDEST SWAP1 POP PUSH2 0x7D2 JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x89F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x8C8 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND LT ISZERO PUSH2 0x947 JUMPI DUP4 DUP3 DUP3 PUSH4 0xFFFFFFFF AND DUP2 MLOAD DUP2 LT PUSH2 0x909 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH2 0x929 DUP2 PUSH1 0x1 PUSH2 0xB84 JUMP JUMPDEST PUSH4 0xFFFFFFFF SWAP1 DUP2 AND SHL SWAP4 SWAP1 SWAP4 AND SWAP3 PUSH2 0x940 DUP2 PUSH2 0xC0B JUMP JUMPDEST SWAP1 POP PUSH2 0x8CE JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 ADD PUSH1 0x8 SWAP1 DIV DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x9EF JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD PUSH1 0x0 JUMPDEST DUP4 DUP3 GT ISZERO PUSH2 0x9BD JUMPI DUP4 MLOAD DUP4 DUP3 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP3 PUSH1 0x20 ADD SWAP3 PUSH1 0x4 ADD PUSH1 0x20 DUP2 PUSH1 0x3 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB MUL PUSH2 0x979 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9ED JUMPI DUP3 DUP2 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x4 ADD PUSH1 0x20 DUP2 PUSH1 0x3 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB MUL PUSH2 0x9BD JUMP JUMPDEST POP JUMPDEST POP PUSH2 0x9FB SWAP3 SWAP2 POP PUSH2 0x9FF JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x9FB JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xA00 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xA28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA3E JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA59 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0xA70 PUSH1 0x40 DUP6 ADD PUSH2 0xA14 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA8B JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0xA9B PUSH1 0x20 DUP5 ADD PUSH2 0xA14 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xAB8 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH2 0xAC8 PUSH1 0x20 DUP6 ADD PUSH2 0xA14 JUMP JUMPDEST SWAP2 POP PUSH2 0xA70 PUSH1 0x40 DUP6 ADD PUSH2 0xA14 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x76657274657820696E64657820657863656564732063757272656E7420747265 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x652073697A65 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD PUSH1 0x40 DUP4 DUP4 ADD MSTORE DUP1 MLOAD PUSH1 0x60 DUP5 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP3 SWAP2 DUP3 ADD SWAP1 DUP4 SWAP1 PUSH1 0x80 DUP7 ADD SWAP1 JUMPDEST DUP1 DUP4 LT ISZERO PUSH2 0xB67 JUMPI DUP4 MLOAD PUSH4 0xFFFFFFFF AND DUP3 MSTORE SWAP3 DUP5 ADD SWAP3 PUSH1 0x1 SWAP3 SWAP1 SWAP3 ADD SWAP2 SWAP1 DUP5 ADD SWAP1 PUSH2 0xB41 JUMP JUMPDEST POP PUSH4 0xFFFFFFFF DUP5 DUP9 ADD MLOAD AND PUSH1 0x40 DUP8 ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 DUP4 AND DUP2 DUP6 AND DUP1 DUP4 SUB DUP3 GT ISZERO PUSH2 0xBA3 JUMPI PUSH2 0xBA3 PUSH2 0xC2F JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xBC6 JUMPI PUSH2 0xBC6 PUSH2 0xC2F JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP4 DUP2 AND SWAP1 DUP4 AND DUP2 DUP2 LT ISZERO PUSH2 0xBE8 JUMPI PUSH2 0xBE8 PUSH2 0xC2F JUMP JUMPDEST SUB SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0xC04 JUMPI PUSH2 0xC04 PUSH2 0xC2F JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 DUP4 AND DUP2 DUP2 EQ ISZERO PUSH2 0xC25 JUMPI PUSH2 0xC25 PUSH2 0xC2F JUMP JUMPDEST PUSH1 0x1 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID STOP ADD STOP MUL STOP ADD STOP SUB STOP ADD STOP MUL STOP ADD STOP DIV STOP ADD STOP MUL STOP ADD STOP SUB STOP ADD STOP MUL STOP ADD STOP SDIV STOP ADD STOP MUL STOP ADD STOP SUB STOP ADD STOP MUL STOP ADD STOP DIV STOP ADD STOP MUL STOP ADD STOP SUB STOP ADD STOP MUL STOP ADD STOP MOD STOP ADD STOP MUL STOP ADD STOP SUB STOP ADD STOP MUL STOP ADD STOP DIV STOP ADD STOP MUL STOP ADD STOP SUB STOP ADD STOP MUL STOP ADD STOP SDIV STOP ADD STOP MUL STOP ADD STOP SUB STOP ADD STOP MUL STOP ADD STOP DIV STOP ADD STOP MUL STOP ADD STOP SUB STOP ADD STOP MUL STOP ADD STOP SMOD STOP ADD STOP MUL STOP ADD STOP SUB STOP ADD STOP MUL STOP ADD STOP DIV STOP ADD STOP MUL STOP ADD STOP SUB STOP ADD STOP MUL STOP ADD STOP SDIV STOP ADD STOP MUL STOP ADD STOP SUB STOP ADD STOP MUL STOP ADD STOP DIV STOP ADD STOP MUL STOP ADD STOP SUB STOP ADD STOP MUL STOP ADD STOP MOD STOP ADD STOP MUL STOP ADD STOP SUB STOP ADD STOP MUL STOP ADD STOP DIV STOP ADD STOP MUL STOP ADD STOP SUB STOP ADD STOP MUL STOP ADD STOP SDIV STOP ADD STOP MUL STOP ADD STOP SUB STOP ADD STOP MUL STOP ADD STOP DIV STOP ADD STOP MUL STOP ADD STOP SUB STOP ADD STOP MUL STOP ADD STOP ADDMOD LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA8 0xCD SHL 0xCF 0x4C 0xB1 DUP1 0xC PUSH24 0xD3CC0F291EA10DD652E5E2AB37B3DD54BD61A52CBC9D3C64 PUSH20 0x6F6C634300080400330000000000000000000000 ",
      "sourceMap": "686:7925:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;686:7925:0;;;;;;;;;;;;;;;;;"
    },
    "deployedBytecode": {
      "generatedSources": [
        {
          "ast": {
            "nodeType": "YulBlock",
            "src": "0:5280:2",
            "statements": [
              {
                "nodeType": "YulBlock",
                "src": "6:3:2",
                "statements": []
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "62:115:2",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "72:29:2",
                      "value": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "94:6:2"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "81:12:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "81:20:2"
                      },
                      "variableNames": [
                        {
                          "name": "value",
                          "nodeType": "YulIdentifier",
                          "src": "72:5:2"
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "155:16:2",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "164:1:2",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "167:1:2",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "157:6:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "157:12:2"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "157:12:2"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "123:5:2"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "134:5:2"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "141:10:2",
                                    "type": "",
                                    "value": "0xffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "130:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "130:22:2"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "120:2:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "120:33:2"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "113:6:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "113:41:2"
                      },
                      "nodeType": "YulIf",
                      "src": "110:2:2"
                    }
                  ]
                },
                "name": "abi_decode_uint32",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "offset",
                    "nodeType": "YulTypedName",
                    "src": "41:6:2",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value",
                    "nodeType": "YulTypedName",
                    "src": "52:5:2",
                    "type": ""
                  }
                ],
                "src": "14:163:2"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "276:120:2",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "322:26:2",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "331:6:2"
                                },
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "339:6:2"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "324:6:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "324:22:2"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "324:22:2"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "297:7:2"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "306:9:2"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "293:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "293:23:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "318:2:2",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "289:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "289:32:2"
                      },
                      "nodeType": "YulIf",
                      "src": "286:2:2"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "357:33:2",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "380:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "367:12:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "367:23:2"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "357:6:2"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_struct$_TreeCtx_$21_storage_ptr",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "242:9:2",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "253:7:2",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "265:6:2",
                    "type": ""
                  }
                ],
                "src": "182:214:2"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "528:227:2",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "574:26:2",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "583:6:2"
                                },
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "591:6:2"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "576:6:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "576:22:2"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "576:22:2"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "549:7:2"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "558:9:2"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "545:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "545:23:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "570:2:2",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "541:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "541:32:2"
                      },
                      "nodeType": "YulIf",
                      "src": "538:2:2"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "609:33:2",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "632:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "619:12:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "619:23:2"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "609:6:2"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "651:42:2",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "678:9:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "689:2:2",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "674:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "674:18:2"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "661:12:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "661:32:2"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "651:6:2"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "702:47:2",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "734:9:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "745:2:2",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "730:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "730:18:2"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_uint32",
                          "nodeType": "YulIdentifier",
                          "src": "712:17:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "712:37:2"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "702:6:2"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_struct$_TreeCtx_$21_storage_ptrt_uint256t_uint32",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "478:9:2",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "489:7:2",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "501:6:2",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "509:6:2",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "517:6:2",
                    "type": ""
                  }
                ],
                "src": "401:354:2"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "870:176:2",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "916:26:2",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "925:6:2"
                                },
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "933:6:2"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "918:6:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "918:22:2"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "918:22:2"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "891:7:2"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "900:9:2"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "887:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "887:23:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "912:2:2",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "883:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "883:32:2"
                      },
                      "nodeType": "YulIf",
                      "src": "880:2:2"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "951:33:2",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "974:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "961:12:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "961:23:2"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "951:6:2"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "993:47:2",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1025:9:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1036:2:2",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1021:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1021:18:2"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_uint32",
                          "nodeType": "YulIdentifier",
                          "src": "1003:17:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1003:37:2"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "993:6:2"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_struct$_TreeCtx_$21_storage_ptrt_uint32",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "828:9:2",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "839:7:2",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "851:6:2",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "859:6:2",
                    "type": ""
                  }
                ],
                "src": "760:286:2"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1177:232:2",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1223:26:2",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1232:6:2"
                                },
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1240:6:2"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1225:6:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1225:22:2"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1225:22:2"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "1198:7:2"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1207:9:2"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1194:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1194:23:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1219:2:2",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1190:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1190:32:2"
                      },
                      "nodeType": "YulIf",
                      "src": "1187:2:2"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1258:33:2",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1281:9:2"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1268:12:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1268:23:2"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1258:6:2"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1300:47:2",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1332:9:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1343:2:2",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1328:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1328:18:2"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_uint32",
                          "nodeType": "YulIdentifier",
                          "src": "1310:17:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1310:37:2"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1300:6:2"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1356:47:2",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1388:9:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1399:2:2",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1384:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1384:18:2"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_uint32",
                          "nodeType": "YulIdentifier",
                          "src": "1366:17:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1366:37:2"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "1356:6:2"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_struct$_TreeCtx_$21_storage_ptrt_uint32t_uint32",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1127:9:2",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "1138:7:2",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1150:6:2",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "1158:6:2",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "1166:6:2",
                    "type": ""
                  }
                ],
                "src": "1051:358:2"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1588:228:2",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1605:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1616:2:2",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1598:6:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1598:21:2"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1598:21:2"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1639:9:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1650:2:2",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1635:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1635:18:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1655:2:2",
                            "type": "",
                            "value": "38"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1628:6:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1628:30:2"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1628:30:2"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1678:9:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1689:2:2",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1674:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1674:18:2"
                          },
                          {
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "1694:34:2",
                            "type": "",
                            "value": "vertex index exceeds current tre"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1667:6:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1667:62:2"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1667:62:2"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1749:9:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1760:2:2",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1745:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1745:18:2"
                          },
                          {
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "1765:8:2",
                            "type": "",
                            "value": "e size"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1738:6:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1738:36:2"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1738:36:2"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1783:27:2",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1795:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1806:3:2",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1791:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1791:19:2"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "1783:4:2"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_0fe1c9f486b7e55898c16aff454de38e4d256ec9f594b4f097eb6e91263d21bd__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1565:9:2",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "1579:4:2",
                    "type": ""
                  }
                ],
                "src": "1414:402:2"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1995:228:2",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2012:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2023:2:2",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2005:6:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2005:21:2"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2005:21:2"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2046:9:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2057:2:2",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2042:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2042:18:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2062:2:2",
                            "type": "",
                            "value": "38"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2035:6:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2035:30:2"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2035:30:2"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2085:9:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2096:2:2",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2081:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2081:18:2"
                          },
                          {
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "2101:34:2",
                            "type": "",
                            "value": "parent index exceeds current tre"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2074:6:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2074:62:2"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2074:62:2"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2156:9:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2167:2:2",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2152:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2152:18:2"
                          },
                          {
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "2172:8:2",
                            "type": "",
                            "value": "e size"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2145:6:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2145:36:2"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2145:36:2"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2190:27:2",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2202:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2213:3:2",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2198:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2198:19:2"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "2190:4:2"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_3e397e31f560df2f81f447af47da98031037c11c6949fb827e175b5f35adb59d__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1972:9:2",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "1986:4:2",
                    "type": ""
                  }
                ],
                "src": "1821:402:2"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2402:227:2",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2419:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2430:2:2",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2412:6:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2412:21:2"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2412:21:2"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2453:9:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2464:2:2",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2449:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2449:18:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2469:2:2",
                            "type": "",
                            "value": "37"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2442:6:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2442:30:2"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2442:30:2"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2492:9:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2503:2:2",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2488:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2488:18:2"
                          },
                          {
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "2508:34:2",
                            "type": "",
                            "value": "search depth deeper than vertex "
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2481:6:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2481:62:2"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2481:62:2"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2563:9:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2574:2:2",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2559:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2559:18:2"
                          },
                          {
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "2579:7:2",
                            "type": "",
                            "value": "depth"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2552:6:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2552:35:2"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2552:35:2"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2596:27:2",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2608:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2619:3:2",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2604:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2604:19:2"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "2596:4:2"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_ec785b0e35b604bc2cba2af3f2eaa77def337cf29b77a4aa96422b1cc64b2917__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2379:9:2",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "2393:4:2",
                    "type": ""
                  }
                ],
                "src": "2228:401:2"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2787:675:2",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2797:12:2",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2807:2:2",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "2801:2:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2825:9:2"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2836:2:2"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2818:6:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2818:21:2"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2818:21:2"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2848:32:2",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2866:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2877:2:2",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2862:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2862:18:2"
                      },
                      "variables": [
                        {
                          "name": "tail_1",
                          "nodeType": "YulTypedName",
                          "src": "2852:6:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2889:33:2",
                      "value": {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2915:6:2"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2909:5:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2909:13:2"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "2893:12:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2942:9:2"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "2953:2:2"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2938:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2938:18:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2958:4:2",
                            "type": "",
                            "value": "0x40"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2931:6:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2931:32:2"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2931:32:2"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2972:17:2",
                      "value": {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "2983:6:2"
                      },
                      "variables": [
                        {
                          "name": "pos",
                          "nodeType": "YulTypedName",
                          "src": "2976:3:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2998:33:2",
                      "value": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "3018:12:2"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "3012:5:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3012:19:2"
                      },
                      "variables": [
                        {
                          "name": "length",
                          "nodeType": "YulTypedName",
                          "src": "3002:6:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "tail_1",
                            "nodeType": "YulIdentifier",
                            "src": "3047:6:2"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3055:6:2"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3040:6:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3040:22:2"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3040:22:2"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3071:26:2",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3082:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3093:3:2",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3078:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3078:19:2"
                      },
                      "variableNames": [
                        {
                          "name": "pos",
                          "nodeType": "YulIdentifier",
                          "src": "3071:3:2"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3106:35:2",
                      "value": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "3124:12:2"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3138:2:2"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3120:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3120:21:2"
                      },
                      "variables": [
                        {
                          "name": "srcPtr",
                          "nodeType": "YulTypedName",
                          "src": "3110:6:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3150:13:2",
                      "value": {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "3159:4:2"
                      },
                      "variables": [
                        {
                          "name": "i",
                          "nodeType": "YulTypedName",
                          "src": "3154:1:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3221:137:2",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "3242:3:2"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "3257:6:2"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "3251:5:2"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3251:13:2"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3266:10:2",
                                      "type": "",
                                      "value": "0xffffffff"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "and",
                                    "nodeType": "YulIdentifier",
                                    "src": "3247:3:2"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3247:30:2"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "3235:6:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3235:43:2"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3235:43:2"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "3291:19:2",
                            "value": {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "3302:3:2"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "3307:2:2"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3298:3:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3298:12:2"
                            },
                            "variableNames": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "3291:3:2"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "3323:25:2",
                            "value": {
                              "arguments": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "3337:6:2"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "3345:2:2"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3333:3:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3333:15:2"
                            },
                            "variableNames": [
                              {
                                "name": "srcPtr",
                                "nodeType": "YulIdentifier",
                                "src": "3323:6:2"
                              }
                            ]
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "3183:1:2"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "3186:6:2"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "3180:2:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3180:13:2"
                      },
                      "nodeType": "YulForLoop",
                      "post": {
                        "nodeType": "YulBlock",
                        "src": "3194:18:2",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "3196:14:2",
                            "value": {
                              "arguments": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "3205:1:2"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3208:1:2",
                                  "type": "",
                                  "value": "1"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3201:3:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3201:9:2"
                            },
                            "variableNames": [
                              {
                                "name": "i",
                                "nodeType": "YulIdentifier",
                                "src": "3196:1:2"
                              }
                            ]
                          }
                        ]
                      },
                      "pre": {
                        "nodeType": "YulBlock",
                        "src": "3176:3:2",
                        "statements": []
                      },
                      "src": "3172:186:2"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3378:9:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3389:4:2",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3374:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3374:20:2"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "3410:6:2"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "3418:2:2"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3406:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3406:15:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3400:5:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3400:22:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3424:10:2",
                                "type": "",
                                "value": "0xffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "3396:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3396:39:2"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3367:6:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3367:69:2"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3367:69:2"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3445:11:2",
                      "value": {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3453:3:2"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "3445:4:2"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_struct$_Vertex_$27_memory_ptr__to_t_struct$_Vertex_$27_memory_ptr__fromStack_library_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2756:9:2",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "2767:6:2",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "2778:4:2",
                    "type": ""
                  }
                ],
                "src": "2634:828:2"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3574:93:2",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "3584:26:2",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3596:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3607:2:2",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3592:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3592:18:2"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "3584:4:2"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3626:9:2"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "3641:6:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3649:10:2",
                                "type": "",
                                "value": "0xffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "3637:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3637:23:2"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3619:6:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3619:42:2"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3619:42:2"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_uint32__to_t_uint32__fromStack_library_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "3543:9:2",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "3554:6:2",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "3565:4:2",
                    "type": ""
                  }
                ],
                "src": "3467:200:2"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3771:93:2",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "3781:26:2",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3793:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3804:2:2",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3789:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3789:18:2"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "3781:4:2"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3823:9:2"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "3838:6:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3846:10:2",
                                "type": "",
                                "value": "0xffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "3834:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3834:23:2"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "3816:6:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3816:42:2"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3816:42:2"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "3740:9:2",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "3751:6:2",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "3762:4:2",
                    "type": ""
                  }
                ],
                "src": "3672:192:2"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4002:166:2",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "4012:26:2",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4024:9:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4035:2:2",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4020:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4020:18:2"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "4012:4:2"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4047:20:2",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4057:10:2",
                        "type": "",
                        "value": "0xffffffff"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "4051:2:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4083:9:2"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "4098:6:2"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "4106:2:2"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "4094:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4094:15:2"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4076:6:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4076:34:2"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4076:34:2"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4130:9:2"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4141:2:2",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4126:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4126:18:2"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "4150:6:2"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "4158:2:2"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "4146:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4146:15:2"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4119:6:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4119:43:2"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4119:43:2"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_uint32_t_uint32__to_t_uint32_t_uint32__fromStack_library_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "3963:9:2",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "3974:6:2",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "3982:6:2",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "3993:4:2",
                    "type": ""
                  }
                ],
                "src": "3869:299:2"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4220:181:2",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4230:20:2",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4240:10:2",
                        "type": "",
                        "value": "0xffffffff"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "4234:2:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4259:21:2",
                      "value": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "4274:1:2"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4277:2:2"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4270:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4270:10:2"
                      },
                      "variables": [
                        {
                          "name": "x_1",
                          "nodeType": "YulTypedName",
                          "src": "4263:3:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4289:21:2",
                      "value": {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "4304:1:2"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4307:2:2"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4300:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4300:10:2"
                      },
                      "variables": [
                        {
                          "name": "y_1",
                          "nodeType": "YulTypedName",
                          "src": "4293:3:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "4344:22:2",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x11",
                                "nodeType": "YulIdentifier",
                                "src": "4346:16:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4346:18:2"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "4346:18:2"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "x_1",
                            "nodeType": "YulIdentifier",
                            "src": "4325:3:2"
                          },
                          {
                            "arguments": [
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "4334:2:2"
                              },
                              {
                                "name": "y_1",
                                "nodeType": "YulIdentifier",
                                "src": "4338:3:2"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "4330:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4330:12:2"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "4322:2:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4322:21:2"
                      },
                      "nodeType": "YulIf",
                      "src": "4319:2:2"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4375:20:2",
                      "value": {
                        "arguments": [
                          {
                            "name": "x_1",
                            "nodeType": "YulIdentifier",
                            "src": "4386:3:2"
                          },
                          {
                            "name": "y_1",
                            "nodeType": "YulIdentifier",
                            "src": "4391:3:2"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4382:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4382:13:2"
                      },
                      "variableNames": [
                        {
                          "name": "sum",
                          "nodeType": "YulIdentifier",
                          "src": "4375:3:2"
                        }
                      ]
                    }
                  ]
                },
                "name": "checked_add_t_uint32",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "x",
                    "nodeType": "YulTypedName",
                    "src": "4203:1:2",
                    "type": ""
                  },
                  {
                    "name": "y",
                    "nodeType": "YulTypedName",
                    "src": "4206:1:2",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "sum",
                    "nodeType": "YulTypedName",
                    "src": "4212:3:2",
                    "type": ""
                  }
                ],
                "src": "4173:228:2"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4458:116:2",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "4517:22:2",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x11",
                                "nodeType": "YulIdentifier",
                                "src": "4519:16:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4519:18:2"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "4519:18:2"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "4489:1:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "4482:6:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4482:9:2"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "4475:6:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4475:17:2"
                          },
                          {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "4497:1:2"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4508:1:2",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "4504:3:2"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4504:6:2"
                                  },
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "4512:1:2"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "4500:3:2"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4500:14:2"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "4494:2:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4494:21:2"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4471:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4471:45:2"
                      },
                      "nodeType": "YulIf",
                      "src": "4468:2:2"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4548:20:2",
                      "value": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "4563:1:2"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "4566:1:2"
                          }
                        ],
                        "functionName": {
                          "name": "mul",
                          "nodeType": "YulIdentifier",
                          "src": "4559:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4559:9:2"
                      },
                      "variableNames": [
                        {
                          "name": "product",
                          "nodeType": "YulIdentifier",
                          "src": "4548:7:2"
                        }
                      ]
                    }
                  ]
                },
                "name": "checked_mul_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "x",
                    "nodeType": "YulTypedName",
                    "src": "4437:1:2",
                    "type": ""
                  },
                  {
                    "name": "y",
                    "nodeType": "YulTypedName",
                    "src": "4440:1:2",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "product",
                    "nodeType": "YulTypedName",
                    "src": "4446:7:2",
                    "type": ""
                  }
                ],
                "src": "4406:168:2"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4627:173:2",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4637:20:2",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4647:10:2",
                        "type": "",
                        "value": "0xffffffff"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "4641:2:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4666:21:2",
                      "value": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "4681:1:2"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4684:2:2"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4677:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4677:10:2"
                      },
                      "variables": [
                        {
                          "name": "x_1",
                          "nodeType": "YulTypedName",
                          "src": "4670:3:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4696:21:2",
                      "value": {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "4711:1:2"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4714:2:2"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4707:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4707:10:2"
                      },
                      "variables": [
                        {
                          "name": "y_1",
                          "nodeType": "YulTypedName",
                          "src": "4700:3:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "4742:22:2",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x11",
                                "nodeType": "YulIdentifier",
                                "src": "4744:16:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4744:18:2"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "4744:18:2"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "x_1",
                            "nodeType": "YulIdentifier",
                            "src": "4732:3:2"
                          },
                          {
                            "name": "y_1",
                            "nodeType": "YulIdentifier",
                            "src": "4737:3:2"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "4729:2:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4729:12:2"
                      },
                      "nodeType": "YulIf",
                      "src": "4726:2:2"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4773:21:2",
                      "value": {
                        "arguments": [
                          {
                            "name": "x_1",
                            "nodeType": "YulIdentifier",
                            "src": "4785:3:2"
                          },
                          {
                            "name": "y_1",
                            "nodeType": "YulIdentifier",
                            "src": "4790:3:2"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4781:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4781:13:2"
                      },
                      "variableNames": [
                        {
                          "name": "diff",
                          "nodeType": "YulIdentifier",
                          "src": "4773:4:2"
                        }
                      ]
                    }
                  ]
                },
                "name": "checked_sub_t_uint32",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "x",
                    "nodeType": "YulTypedName",
                    "src": "4609:1:2",
                    "type": ""
                  },
                  {
                    "name": "y",
                    "nodeType": "YulTypedName",
                    "src": "4612:1:2",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "diff",
                    "nodeType": "YulTypedName",
                    "src": "4618:4:2",
                    "type": ""
                  }
                ],
                "src": "4579:221:2"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4852:88:2",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "4883:22:2",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x11",
                                "nodeType": "YulIdentifier",
                                "src": "4885:16:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4885:18:2"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "4885:18:2"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4868:5:2"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4879:1:2",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "4875:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4875:6:2"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "4865:2:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4865:17:2"
                      },
                      "nodeType": "YulIf",
                      "src": "4862:2:2"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4914:20:2",
                      "value": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4925:5:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4932:1:2",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4921:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4921:13:2"
                      },
                      "variableNames": [
                        {
                          "name": "ret",
                          "nodeType": "YulIdentifier",
                          "src": "4914:3:2"
                        }
                      ]
                    }
                  ]
                },
                "name": "increment_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "value",
                    "nodeType": "YulTypedName",
                    "src": "4834:5:2",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "ret",
                    "nodeType": "YulTypedName",
                    "src": "4844:3:2",
                    "type": ""
                  }
                ],
                "src": "4805:135:2"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4991:155:2",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5001:20:2",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5011:10:2",
                        "type": "",
                        "value": "0xffffffff"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "5005:2:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5030:29:2",
                      "value": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5049:5:2"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5056:2:2"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5045:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5045:14:2"
                      },
                      "variables": [
                        {
                          "name": "value_1",
                          "nodeType": "YulTypedName",
                          "src": "5034:7:2",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "5087:22:2",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x11",
                                "nodeType": "YulIdentifier",
                                "src": "5089:16:2"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5089:18:2"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "5089:18:2"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "value_1",
                            "nodeType": "YulIdentifier",
                            "src": "5074:7:2"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5083:2:2"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "5071:2:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5071:15:2"
                      },
                      "nodeType": "YulIf",
                      "src": "5068:2:2"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5118:22:2",
                      "value": {
                        "arguments": [
                          {
                            "name": "value_1",
                            "nodeType": "YulIdentifier",
                            "src": "5129:7:2"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5138:1:2",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5125:3:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5125:15:2"
                      },
                      "variableNames": [
                        {
                          "name": "ret",
                          "nodeType": "YulIdentifier",
                          "src": "5118:3:2"
                        }
                      ]
                    }
                  ]
                },
                "name": "increment_t_uint32",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "value",
                    "nodeType": "YulTypedName",
                    "src": "4973:5:2",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "ret",
                    "nodeType": "YulTypedName",
                    "src": "4983:3:2",
                    "type": ""
                  }
                ],
                "src": "4945:201:2"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5183:95:2",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5200:1:2",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5207:3:2",
                                "type": "",
                                "value": "224"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5212:10:2",
                                "type": "",
                                "value": "0x4e487b71"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "5203:3:2"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5203:20:2"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5193:6:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5193:31:2"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5193:31:2"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5240:1:2",
                            "type": "",
                            "value": "4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5243:4:2",
                            "type": "",
                            "value": "0x11"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5233:6:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5233:15:2"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5233:15:2"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5264:1:2",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5267:4:2",
                            "type": "",
                            "value": "0x24"
                          }
                        ],
                        "functionName": {
                          "name": "revert",
                          "nodeType": "YulIdentifier",
                          "src": "5257:6:2"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5257:15:2"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5257:15:2"
                    }
                  ]
                },
                "name": "panic_error_0x11",
                "nodeType": "YulFunctionDefinition",
                "src": "5151:127:2"
              }
            ]
          },
          "contents": "{\n    { }\n    function abi_decode_uint32(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_struct$_TreeCtx_$21_storage_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_struct$_TreeCtx_$21_storage_ptrt_uint256t_uint32(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value1, value1) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := abi_decode_uint32(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_struct$_TreeCtx_$21_storage_ptrt_uint32(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_uint32(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_struct$_TreeCtx_$21_storage_ptrt_uint32t_uint32(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_uint32(add(headStart, 32))\n        value2 := abi_decode_uint32(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_stringliteral_0fe1c9f486b7e55898c16aff454de38e4d256ec9f594b4f097eb6e91263d21bd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"vertex index exceeds current tre\")\n        mstore(add(headStart, 96), \"e size\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3e397e31f560df2f81f447af47da98031037c11c6949fb827e175b5f35adb59d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"parent index exceeds current tre\")\n        mstore(add(headStart, 96), \"e size\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ec785b0e35b604bc2cba2af3f2eaa77def337cf29b77a4aa96422b1cc64b2917__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"search depth deeper than vertex \")\n        mstore(add(headStart, 96), \"depth\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_struct$_Vertex_$27_memory_ptr__to_t_struct$_Vertex_$27_memory_ptr__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let tail_1 := add(headStart, 96)\n        let memberValue0 := mload(value0)\n        mstore(add(headStart, _1), 0x40)\n        let pos := tail_1\n        let length := mload(memberValue0)\n        mstore(tail_1, length)\n        pos := add(headStart, 128)\n        let srcPtr := add(memberValue0, _1)\n        let i := tail\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), 0xffffffff))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        mstore(add(headStart, 0x40), and(mload(add(value0, _1)), 0xffffffff))\n        tail := pos\n    }\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_library_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff))\n    }\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffff))\n    }\n    function abi_encode_tuple_t_uint32_t_uint32__to_t_uint32_t_uint32__fromStack_library_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function checked_add_t_uint32(x, y) -> sum\n    {\n        let _1 := 0xffffffff\n        let x_1 := and(x, _1)\n        let y_1 := and(y, _1)\n        if gt(x_1, sub(_1, y_1)) { panic_error_0x11() }\n        sum := add(x_1, y_1)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint32(x, y) -> diff\n    {\n        let _1 := 0xffffffff\n        let x_1 := and(x, _1)\n        let y_1 := and(y, _1)\n        if lt(x_1, y_1) { panic_error_0x11() }\n        diff := sub(x_1, y_1)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function increment_t_uint32(value) -> ret\n    {\n        let _1 := 0xffffffff\n        let value_1 := and(value, _1)\n        if eq(value_1, _1) { panic_error_0x11() }\n        ret := add(value_1, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
          "id": 2,
          "language": "Yul",
          "name": "#utility.yul"
        }
      ],
      "immutableReferences": {},
      "linkReferences": {},
      "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x6C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x202449AA EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0x506923C1 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x694884B6 EQ PUSH2 0xBE JUMPI DUP1 PUSH4 0x6AF5673E EQ PUSH2 0x103 JUMPI DUP1 PUSH4 0x6B5FEFFA EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0x8835022C EQ PUSH2 0x135 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP1 ISZERO PUSH2 0x7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x91 PUSH2 0x8C CALLDATASIZE PUSH1 0x4 PUSH2 0xA45 JUMP JUMPDEST PUSH2 0x148 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x91 PUSH2 0xB9 CALLDATASIZE PUSH1 0x4 PUSH2 0xA79 JUMP JUMPDEST PUSH2 0x45B JUMP JUMPDEST PUSH2 0xE6 PUSH2 0xCC CALLDATASIZE PUSH1 0x4 PUSH2 0xA2D JUMP JUMPDEST PUSH1 0x1 ADD SLOAD PUSH4 0xFFFFFFFF DUP1 DUP3 AND SWAP3 PUSH5 0x100000000 SWAP1 SWAP3 DIV AND SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH4 0xFFFFFFFF SWAP4 DUP5 AND DUP2 MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH2 0xA2 JUMP JUMPDEST PUSH2 0x91 PUSH2 0x111 CALLDATASIZE PUSH1 0x4 PUSH2 0xA2D JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x128 PUSH2 0x123 CALLDATASIZE PUSH1 0x4 PUSH2 0xA79 JUMP JUMPDEST PUSH2 0x472 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0xB1C JUMP JUMPDEST PUSH2 0x91 PUSH2 0x143 CALLDATASIZE PUSH1 0x4 PUSH2 0xAA4 JUMP JUMPDEST PUSH2 0x58C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP1 DUP5 SLOAD PUSH4 0xFFFFFFFF DUP2 AND PUSH2 0x192 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP2 DUP4 ADD DUP2 DUP2 MSTORE PUSH1 0x60 DUP4 ADD SWAP1 SWAP4 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP2 POP PUSH2 0x376 JUMP JUMPDEST DUP1 PUSH4 0xFFFFFFFF AND DUP5 PUSH4 0xFFFFFFFF AND LT PUSH2 0x201 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x706172656E7420696E64657820657863656564732063757272656E7420747265 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x652073697A65 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP6 PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x22C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x2 SWAP1 SWAP3 MUL ADD DUP2 ADD SLOAD PUSH4 0xFFFFFFFF AND SWAP3 POP PUSH2 0x25C SWAP1 PUSH2 0x257 SWAP1 DUP5 SWAP1 PUSH2 0xB84 JUMP JUMPDEST PUSH2 0x7BC JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x288 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x2B1 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 PUSH4 0xFFFFFFFF AND LT ISZERO PUSH2 0x349 JUMPI PUSH2 0x2FE DUP11 DUP10 DUP6 DUP5 PUSH4 0xFFFFFFFF AND DUP2 MLOAD DUP2 LT PUSH2 0x2F1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x58C JUMP JUMPDEST DUP3 DUP3 PUSH4 0xFFFFFFFF AND DUP2 MLOAD DUP2 LT PUSH2 0x324 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH2 0x342 DUP2 PUSH2 0xC0B JUMP JUMPDEST SWAP1 POP PUSH2 0x2B7 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x1 PUSH2 0x368 SWAP2 SWAP1 PUSH2 0xB84 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND SWAP1 MSTORE SWAP5 POP POP POP POP JUMPDEST DUP6 SLOAD PUSH1 0x1 DUP2 ADD DUP8 SSTORE PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 DUP5 MLOAD DUP1 MLOAD DUP7 SWAP5 PUSH1 0x2 MUL SWAP1 SWAP3 ADD SWAP3 PUSH2 0x3A5 SWAP3 DUP5 SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x950 JUMP JUMPDEST POP PUSH1 0x20 SWAP2 DUP3 ADD MLOAD PUSH1 0x1 SWAP2 DUP3 ADD DUP1 SLOAD PUSH4 0xFFFFFFFF NOT AND PUSH4 0xFFFFFFFF SWAP3 DUP4 AND OR SWAP1 SSTORE SWAP1 DUP9 ADD SLOAD SWAP2 DUP5 ADD MLOAD PUSH5 0x100000000 SWAP1 SWAP3 DIV DUP2 AND SWAP2 AND GT ISZERO PUSH2 0x417 JUMPI PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP8 ADD DUP1 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH5 0x100000000 PUSH4 0xFFFFFFFF SWAP4 DUP5 AND MUL PUSH4 0xFFFFFFFF NOT AND OR SWAP2 DUP4 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xFFFFFFFF DUP6 AND DUP2 MSTORE DUP6 SWAP1 PUSH32 0x4F53FE376C2872B56E39C47051086455AFD7D2CF37E194E8A7AD038197C43CC5 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x467 DUP4 DUP4 PUSH2 0x472 JUMP JUMPDEST PUSH1 0x20 ADD MLOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE DUP3 SLOAD PUSH4 0xFFFFFFFF DUP4 AND LT PUSH2 0x4AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F8 SWAP1 PUSH2 0xAD6 JUMP JUMPDEST DUP3 PUSH1 0x0 ADD DUP3 PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x4D6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x56A JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x4 ADD SWAP1 PUSH1 0x20 DUP3 PUSH1 0x3 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB DUP3 MUL SWAP2 POP DUP1 DUP5 GT PUSH2 0x52D JUMPI SWAP1 POP JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH4 0xFFFFFFFF AND PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP3 SLOAD PUSH1 0x0 SWAP1 PUSH4 0xFFFFFFFF DUP5 AND LT PUSH2 0x5B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F8 SWAP1 PUSH2 0xAD6 JUMP JUMPDEST DUP4 PUSH1 0x0 ADD DUP4 PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x5DE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x1 PUSH1 0x2 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH4 0xFFFFFFFF SWAP1 DUP2 AND SWAP1 DUP4 AND GT ISZERO PUSH2 0x659 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x73656172636820646570746820646565706572207468616E2076657274657820 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0xC8CAE0E8D PUSH1 0xDB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F8 JUMP JUMPDEST DUP3 JUMPDEST DUP5 PUSH1 0x0 ADD DUP2 PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x684 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x1 PUSH1 0x2 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH4 0xFFFFFFFF DUP5 DUP2 AND SWAP2 AND EQ PUSH2 0x7B4 JUMPI PUSH1 0x0 DUP6 PUSH1 0x0 ADD DUP3 PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x6D2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD DUP1 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 NOT DUP2 ADD JUMPDEST DUP2 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND LT ISZERO PUSH2 0x7AC JUMPI DUP3 DUP2 PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x727 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x8 SWAP2 DUP3 DUP3 DIV ADD SWAP2 SWAP1 MOD PUSH1 0x4 MUL SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP4 POP DUP6 PUSH4 0xFFFFFFFF AND DUP9 PUSH1 0x0 ADD DUP6 PUSH4 0xFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x77F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x1 PUSH1 0x2 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH4 0xFFFFFFFF AND LT PUSH2 0x7A3 JUMPI PUSH2 0x7AC JUMP JUMPDEST PUSH1 0x0 NOT ADD PUSH2 0x6ED JUMP JUMPDEST POP POP POP PUSH2 0x65B JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x7CB PUSH1 0x1 DUP5 PUSH2 0xBCB JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x0 JUMPDEST PUSH1 0x4 DUP2 LT ISZERO PUSH2 0x86F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x120 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x100 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC46 PUSH2 0x100 SWAP2 CODECOPY PUSH2 0x804 DUP4 PUSH1 0x8 PUSH2 0xBAC JUMP JUMPDEST DUP6 PUSH4 0xFFFFFFFF AND SWAP1 SHR PUSH1 0xFF AND PUSH4 0xFFFFFFFF AND DUP2 MLOAD DUP2 LT PUSH2 0x834 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADD PUSH1 0x20 ADD MLOAD PUSH1 0xF8 SHR SWAP1 POP PUSH2 0x848 DUP2 DUP5 PUSH2 0xB84 JUMP JUMPDEST SWAP3 POP DUP1 PUSH4 0xFFFFFFFF AND PUSH1 0x8 EQ PUSH2 0x85E JUMPI POP PUSH2 0x86F JUMP JUMPDEST POP PUSH2 0x868 DUP2 PUSH2 0xBF0 JUMP JUMPDEST SWAP1 POP PUSH2 0x7D2 JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH4 0xFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x89F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x8C8 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 PUSH4 0xFFFFFFFF AND DUP2 PUSH4 0xFFFFFFFF AND LT ISZERO PUSH2 0x947 JUMPI DUP4 DUP3 DUP3 PUSH4 0xFFFFFFFF AND DUP2 MLOAD DUP2 LT PUSH2 0x909 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE PUSH2 0x929 DUP2 PUSH1 0x1 PUSH2 0xB84 JUMP JUMPDEST PUSH4 0xFFFFFFFF SWAP1 DUP2 AND SHL SWAP4 SWAP1 SWAP4 AND SWAP3 PUSH2 0x940 DUP2 PUSH2 0xC0B JUMP JUMPDEST SWAP1 POP PUSH2 0x8CE JUMP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 ADD PUSH1 0x8 SWAP1 DIV DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x9EF JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD PUSH1 0x0 JUMPDEST DUP4 DUP3 GT ISZERO PUSH2 0x9BD JUMPI DUP4 MLOAD DUP4 DUP3 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH4 0xFFFFFFFF AND MUL OR SWAP1 SSTORE POP SWAP3 PUSH1 0x20 ADD SWAP3 PUSH1 0x4 ADD PUSH1 0x20 DUP2 PUSH1 0x3 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB MUL PUSH2 0x979 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9ED JUMPI DUP3 DUP2 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH4 0xFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH1 0x4 ADD PUSH1 0x20 DUP2 PUSH1 0x3 ADD DIV SWAP3 DUP4 ADD SWAP3 PUSH1 0x1 SUB MUL PUSH2 0x9BD JUMP JUMPDEST POP JUMPDEST POP PUSH2 0x9FB SWAP3 SWAP2 POP PUSH2 0x9FF JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x9FB JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0xA00 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0xA28 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA3E JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xA59 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0xA70 PUSH1 0x40 DUP6 ADD PUSH2 0xA14 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA8B JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0xA9B PUSH1 0x20 DUP5 ADD PUSH2 0xA14 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xAB8 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH2 0xAC8 PUSH1 0x20 DUP6 ADD PUSH2 0xA14 JUMP JUMPDEST SWAP2 POP PUSH2 0xA70 PUSH1 0x40 DUP6 ADD PUSH2 0xA14 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x76657274657820696E64657820657863656564732063757272656E7420747265 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x652073697A65 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD PUSH1 0x40 DUP4 DUP4 ADD MSTORE DUP1 MLOAD PUSH1 0x60 DUP5 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP3 SWAP2 DUP3 ADD SWAP1 DUP4 SWAP1 PUSH1 0x80 DUP7 ADD SWAP1 JUMPDEST DUP1 DUP4 LT ISZERO PUSH2 0xB67 JUMPI DUP4 MLOAD PUSH4 0xFFFFFFFF AND DUP3 MSTORE SWAP3 DUP5 ADD SWAP3 PUSH1 0x1 SWAP3 SWAP1 SWAP3 ADD SWAP2 SWAP1 DUP5 ADD SWAP1 PUSH2 0xB41 JUMP JUMPDEST POP PUSH4 0xFFFFFFFF DUP5 DUP9 ADD MLOAD AND PUSH1 0x40 DUP8 ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 DUP4 AND DUP2 DUP6 AND DUP1 DUP4 SUB DUP3 GT ISZERO PUSH2 0xBA3 JUMPI PUSH2 0xBA3 PUSH2 0xC2F JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xBC6 JUMPI PUSH2 0xBC6 PUSH2 0xC2F JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP4 DUP2 AND SWAP1 DUP4 AND DUP2 DUP2 LT ISZERO PUSH2 0xBE8 JUMPI PUSH2 0xBE8 PUSH2 0xC2F JUMP JUMPDEST SUB SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0xC04 JUMPI PUSH2 0xC04 PUSH2 0xC2F JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 DUP4 AND DUP2 DUP2 EQ ISZERO PUSH2 0xC25 JUMPI PUSH2 0xC25 PUSH2 0xC2F JUMP JUMPDEST PUSH1 0x1 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID STOP ADD STOP MUL STOP ADD STOP SUB STOP ADD STOP MUL STOP ADD STOP DIV STOP ADD STOP MUL STOP ADD STOP SUB STOP ADD STOP MUL STOP ADD STOP SDIV STOP ADD STOP MUL STOP ADD STOP SUB STOP ADD STOP MUL STOP ADD STOP DIV STOP ADD STOP MUL STOP ADD STOP SUB STOP ADD STOP MUL STOP ADD STOP MOD STOP ADD STOP MUL STOP ADD STOP SUB STOP ADD STOP MUL STOP ADD STOP DIV STOP ADD STOP MUL STOP ADD STOP SUB STOP ADD STOP MUL STOP ADD STOP SDIV STOP ADD STOP MUL STOP ADD STOP SUB STOP ADD STOP MUL STOP ADD STOP DIV STOP ADD STOP MUL STOP ADD STOP SUB STOP ADD STOP MUL STOP ADD STOP SMOD STOP ADD STOP MUL STOP ADD STOP SUB STOP ADD STOP MUL STOP ADD STOP DIV STOP ADD STOP MUL STOP ADD STOP SUB STOP ADD STOP MUL STOP ADD STOP SDIV STOP ADD STOP MUL STOP ADD STOP SUB STOP ADD STOP MUL STOP ADD STOP DIV STOP ADD STOP MUL STOP ADD STOP SUB STOP ADD STOP MUL STOP ADD STOP MOD STOP ADD STOP MUL STOP ADD STOP SUB STOP ADD STOP MUL STOP ADD STOP DIV STOP ADD STOP MUL STOP ADD STOP SUB STOP ADD STOP MUL STOP ADD STOP SDIV STOP ADD STOP MUL STOP ADD STOP SUB STOP ADD STOP MUL STOP ADD STOP DIV STOP ADD STOP MUL STOP ADD STOP SUB STOP ADD STOP MUL STOP ADD STOP ADDMOD LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA8 0xCD SHL 0xCF 0x4C 0xB1 DUP1 0xC PUSH24 0xD3CC0F291EA10DD652E5E2AB37B3DD54BD61A52CBC9D3C64 PUSH20 0x6F6C634300080400330000000000000000000000 ",
      "sourceMap": "686:7925:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:1500;;;;;;;;;;-1:-1:-1;2276:1500:0;;;;;:::i;:::-;;:::i;:::-;;;3649:10:2;3637:23;;;3619:42;;3607:2;3592:18;2276:1500:0;;;;;;;;6052:169;;;;;;:::i;:::-;;:::i;7067:173::-;;;;;;:::i;:::-;7193:19;;;;;;;;7214:18;;;;;;7067:173;;;;;4057:10:2;4094:15;;;4076:34;;4146:15;;;;4141:2;4126:18;;4119:43;4020:18;7067:173:0;4002:166:2;6787:126:0;;;;;;:::i;:::-;6884:21;;6787:126;6393:301;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;4087:1798::-;;;;;;:::i;:::-;;:::i;2276:1500::-;-1:-1:-1;;;;;;;;;;;;2396:6:0;-1:-1:-1;;;;;;2396:6:0;2464:21;;2501:13;;;2497:1029;;2592:26;;;-1:-1:-1;2592:26:0;;;2599:15;;;;;;;;;2592:26;;;;;;;;;;;-1:-1:-1;2497:1029:0;;;2753:8;2743:18;;:7;:18;;;2718:115;;;;-1:-1:-1;;;2718:115:0;;2023:2:2;2718:115:0;;;2005:21:2;2062:2;2042:18;;;2035:30;2101:34;2081:18;;;2074:62;-1:-1:-1;;;2152:18:2;;;2145:36;2198:19;;2718:115:0;;;;;;;;;2848:18;2869:5;:14;;2884:7;2869:23;;;;;;;;-1:-1:-1;;;2869:23:0;;;;;;;;;;;;;;;;:29;:23;;;;;:29;;;;;;-1:-1:-1;3010:34:0;;3028:15;;2869:29;;3028:15;:::i;:::-;3010:17;:34::i;:::-;2977:67;;3058:25;3099:14;:21;3086:35;;;;;;-1:-1:-1;;;3086:35:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3086:35:0;;3058:63;;3238:8;3233:230;3256:14;:21;3252:1;:25;;;3233:230;;;3317:131;3357:5;3384:7;3413:14;3428:1;3413:17;;;;;;;;-1:-1:-1;;;3413:17:0;;;;;;;;;;;;;;;3317:18;:131::i;:::-;3302:9;3312:1;3302:12;;;;;;;;-1:-1:-1;;;3302:12:0;;;;;;;;;:146;;;;:12;;;;;;;;;;;:146;3279:3;;;:::i;:::-;;;3233:230;;;;3481:34;;;;;;;;3488:9;3481:34;;;;3499:11;3513:1;3499:15;;;;:::i;:::-;3481:34;;;;3477:38;-1:-1:-1;;;;2497:1029:0;3536:22;;;;;;;:14;:22;;;;;;;;;;;;3556:1;;3536:22;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3536:22:0;;;;;;;;;;;-1:-1:-1;;3536:22:0;;;;;;;;3583:18;;;;3573:7;;;;3583:18;;;;;;3573:28;;;3569:131;;;3638:7;;;;3617:18;;;:28;;-1:-1:-1;;3659:30:0;3617:28;;;;;;-1:-1:-1;;3659:30:0;;;;;;;;;;;3569:131;3715:28;;3649:10:2;3637:23;;3619:42;;3730:3:0;;3715:28;;3607:2:2;3592:18;3715:28:0;;;;;;;3761:8;2276:1500;-1:-1:-1;;;;;2276:1500:0:o;6052:169::-;6154:6;6183:25;6193:5;6200:7;6183:9;:25::i;:::-;:31;;;;6052:169;-1:-1:-1;;;6052:169:0:o;6393:301::-;-1:-1:-1;;;;;;;;;;;;;;;;;6561:21:0;;6551:31;;;;6530:116;;;;-1:-1:-1;;;6530:116:0;;;;;;;:::i;:::-;6664:5;:14;;6679:7;6664:23;;;;;;;;-1:-1:-1;;;6664:23:0;;;;;;;;;;;;;;;;;;;6657:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6657:30:0;;;-1:-1:-1;;6657:30:0;;;;;;;;;;;;;;6393:301;-1:-1:-1;;;6393:301:0:o;4087:1798::-;4269:21;;4220:6;;4259:31;;;;4238:116;;;;-1:-1:-1;;;4238:116:0;;;;;;;:::i;:::-;4395:5;:14;;4410:7;4395:23;;;;;;;;-1:-1:-1;;;4395:23:0;;;;;;;;;;;;;;;;;:29;:23;;;;;:29;;;;;;4385:39;;;;;4364:123;;;;-1:-1:-1;;;4364:123:0;;2430:2:2;4364:123:0;;;2412:21:2;2469:2;2449:18;;;2442:30;2508:34;2488:18;;;2481:62;-1:-1:-1;;;2559:18:2;;;2552:35;2604:19;;4364:123:0;2402:227:2;4364:123:0;4514:7;4532:1323;4549:5;:14;;4564:6;4549:22;;;;;;;;-1:-1:-1;;;4549:22:0;;;;;;;;;;;;;;;;;:28;:22;;;;;:28;;;4539:38;;;4549:28;;4539:38;4532:1323;;4593:34;4630:5;:27;;4658:6;4630:35;;;;;;;;-1:-1:-1;;;4630:35:0;;;;;;;;;;;;;;;;;;;;;;4734:24;;4630:35;;-1:-1:-1;;;5420:19:0;;5370:461;5478:15;5461:32;;:14;:32;;;5370:461;;;5581:17;5599:14;5581:33;;;;;;;;-1:-1:-1;;;5581:33:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5572:42;;5751:6;5719:38;;:5;:14;;5734:6;5719:22;;;;;;;;-1:-1:-1;;;5719:22:0;;;;;;;;;;;;;;;;;:28;:22;;;;;:28;;;;:38;5715:98;;5785:5;;5715:98;-1:-1:-1;;5515:16:0;5370:461;;;;4532:1323;;;;;5872:6;4087:1798;-1:-1:-1;;;;4087:1798:0:o;7246:1363::-;7334:15;7419:12;7434:10;7443:1;7434:6;:10;:::i;:::-;7419:25;-1:-1:-1;7469:1:0;7454:12;7572:241;7596:1;7592;:5;7572:241;;;7618:19;7646:14;;;;;;;;;;;;;;;;;7671:5;:1;7675;7671:5;:::i;:::-;7661;:16;;;;7680:4;7661:23;7646:39;;;;;;;;-1:-1:-1;;;7646:39:0;;;;;;;;;;;;;;;;-1:-1:-1;7708:20:0;7646:39;7708:5;:20;:::i;:::-;7700:28;;7746:12;:17;;7762:1;7746:17;7742:61;;7783:5;;;7742:61;-1:-1:-1;7599:3:0;;;:::i;:::-;;;7572:241;;;;8087:22;8125:5;8112:19;;;;;;;;-1:-1:-1;;;8112:19:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8112:19:0;;8087:44;;8454:8;8449:130;8472:5;8468:9;;:1;:9;;;8449:130;;;8510:5;8498:6;8505:1;8498:9;;;;;;;;-1:-1:-1;;;8498:9:0;;;;;;;;;:17;;;;:9;;;;;;;;;;;:17;8561:5;:1;8565;8561:5;:::i;:::-;8546:21;;;;;8537:31;;;;;8479:3;;;:::i;:::-;;;8449:130;;;-1:-1:-1;8596:6:0;7246:1363;-1:-1:-1;;;;7246:1363:0:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:163:2;81:20;;141:10;130:22;;120:33;;110:2;;167:1;164;157:12;110:2;62:115;;;:::o;182:214::-;265:6;318:2;306:9;297:7;293:23;289:32;286:2;;;339:6;331;324:22;286:2;-1:-1:-1;367:23:2;;276:120;-1:-1:-1;276:120:2:o;401:354::-;501:6;509;517;570:2;558:9;549:7;545:23;541:32;538:2;;;591:6;583;576:22;538:2;632:9;619:23;609:33;;689:2;678:9;674:18;661:32;651:42;;712:37;745:2;734:9;730:18;712:37;:::i;:::-;702:47;;528:227;;;;;:::o;760:286::-;851:6;859;912:2;900:9;891:7;887:23;883:32;880:2;;;933:6;925;918:22;880:2;974:9;961:23;951:33;;1003:37;1036:2;1025:9;1021:18;1003:37;:::i;:::-;993:47;;870:176;;;;;:::o;1051:358::-;1150:6;1158;1166;1219:2;1207:9;1198:7;1194:23;1190:32;1187:2;;;1240:6;1232;1225:22;1187:2;1281:9;1268:23;1258:33;;1310:37;1343:2;1332:9;1328:18;1310:37;:::i;:::-;1300:47;;1366:37;1399:2;1388:9;1384:18;1366:37;:::i;1414:402::-;1616:2;1598:21;;;1655:2;1635:18;;;1628:30;1694:34;1689:2;1674:18;;1667:62;-1:-1:-1;;;1760:2:2;1745:18;;1738:36;1806:3;1791:19;;1588:228::o;2634:828::-;2807:2;2818:21;;;2909:13;;2958:4;2938:18;;;2931:32;3012:19;;2877:2;2862:18;;3040:22;;;2778:4;;2807:2;3120:21;;;2778:4;;3093:3;3078:19;;;3172:186;3186:6;3183:1;3180:13;3172:186;;;3251:13;;3266:10;3247:30;3235:43;;3333:15;;;;3208:1;3201:9;;;;;3298:12;;;;3172:186;;;3176:3;3424:10;3418:2;3410:6;3406:15;3400:22;3396:39;3389:4;3378:9;3374:20;3367:69;3453:3;3445:11;;;;;;2787:675;;;;:::o;4173:228::-;4212:3;4240:10;4277:2;4274:1;4270:10;4307:2;4304:1;4300:10;4338:3;4334:2;4330:12;4325:3;4322:21;4319:2;;;4346:18;;:::i;:::-;4382:13;;4220:181;-1:-1:-1;;;;4220:181:2:o;4406:168::-;4446:7;4512:1;4508;4504:6;4500:14;4497:1;4494:21;4489:1;4482:9;4475:17;4471:45;4468:2;;;4519:18;;:::i;:::-;-1:-1:-1;4559:9:2;;4458:116::o;4579:221::-;4618:4;4647:10;4707;;;;4677;;4729:12;;;4726:2;;;4744:18;;:::i;:::-;4781:13;;4627:173;-1:-1:-1;;;4627:173:2:o;4805:135::-;4844:3;-1:-1:-1;;4865:17:2;;4862:2;;;4885:18;;:::i;:::-;-1:-1:-1;4932:1:2;4921:13;;4852:88::o;4945:201::-;4983:3;5011:10;5056:2;5049:5;5045:14;5083:2;5074:7;5071:15;5068:2;;;5089:18;;:::i;:::-;5138:1;5125:15;;4991:155;-1:-1:-1;;;4991:155:2:o;5151:127::-;5212:10;5207:3;5203:20;5200:1;5193:31;5243:4;5240:1;5233:15;5267:4;5264:1;5257:15"
    },
    "gasEstimates": {
      "creation": {
        "codeDepositCost": "690200",
        "executionCost": "756",
        "totalCost": "690956"
      },
      "external": {
        "getAncestorAtDepth(Tree.TreeCtx storage,uint32,uint32)": "infinite",
        "getDeepest(Tree.TreeCtx storage)": "1149",
        "getDepth(Tree.TreeCtx storage,uint32)": "infinite",
        "getTreeSize(Tree.TreeCtx storage)": "1095",
        "getVertex(Tree.TreeCtx storage,uint32)": "infinite",
        "insertVertex(Tree.TreeCtx storage,uint256,uint32)": "infinite"
      },
      "internal": {
        "getRequiredDepths(uint32)": "infinite"
      }
    },
    "methodIdentifiers": {
      "getAncestorAtDepth(Tree.TreeCtx storage,uint32,uint32)": "8835022c",
      "getDeepest(Tree.TreeCtx storage)": "694884b6",
      "getDepth(Tree.TreeCtx storage,uint32)": "506923c1",
      "getTreeSize(Tree.TreeCtx storage)": "6af5673e",
      "getVertex(Tree.TreeCtx storage,uint32)": "6b5feffa",
      "insertVertex(Tree.TreeCtx storage,uint256,uint32)": "202449aa"
    }
  },
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"_parent\",\"type\":\"uint32\"}],\"name\":\"VertexInserted\",\"type\":\"event\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getAncestorAtDepth(Tree.TreeCtx storage,uint32,uint32)\":{\"params\":{\"_depth\":\"the depth of the ancestor\",\"_tree\":\"pointer to the tree storage\",\"_vertex\":\"the index of the vertex in the vertices array (tree)\"},\"returns\":{\"_0\":\"index of ancestor at depth of _vertex\"}},\"getDeepest(Tree.TreeCtx storage)\":{\"params\":{\"_tree\":\"pointer to the tree storage\"},\"returns\":{\"_0\":\"index number and depth of the deepest vertex\"}},\"getDepth(Tree.TreeCtx storage,uint32)\":{\"params\":{\"_tree\":\"pointer to the tree storage\",\"_vertex\":\"the index of the vertex in the vertices array (tree)\"}},\"getTreeSize(Tree.TreeCtx storage)\":{\"params\":{\"_tree\":\"pointer to the tree storage\"}},\"getVertex(Tree.TreeCtx storage,uint32)\":{\"params\":{\"_tree\":\"pointer to the tree storage\",\"_vertex\":\"the index of the vertex in the vertices array (tree)\"}},\"insertVertex(Tree.TreeCtx storage,uint256,uint32)\":{\"params\":{\"_id\":\"the identifier to differentiate each tree from caller contract\",\"_parent\":\"the index of parent vertex in the vertices array (tree)\",\"_tree\":\"pointer to the tree storage\"},\"returns\":{\"_0\":\"index of the inserted vertex\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getAncestorAtDepth(Tree.TreeCtx storage,uint32,uint32)\":{\"notice\":\"Search an ancestor of a vertex in the tree at a certain depth\"},\"getDeepest(Tree.TreeCtx storage)\":{\"notice\":\"Get current tree size\"},\"getDepth(Tree.TreeCtx storage,uint32)\":{\"notice\":\"Get depth of vertex\"},\"getTreeSize(Tree.TreeCtx storage)\":{\"notice\":\"Get current tree size\"},\"getVertex(Tree.TreeCtx storage,uint32)\":{\"notice\":\"Get vertex from the tree\"},\"insertVertex(Tree.TreeCtx storage,uint256,uint32)\":{\"notice\":\"Insert a vertex to the tree\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Tree.sol\":\"Tree\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Tree.sol\":{\"content\":\"// Copyright 2020 Cartesi Pte. Ltd.\\n\\n// SPDX-License-Identifier: Apache-2.0\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\"); you may not use\\n// this file except in compliance with the License. You may obtain a copy of the\\n// License at http://www.apache.org/licenses/LICENSE-2.0\\n\\n// Unless required by applicable law or agreed to in writing, software distributed\\n// under the License is distributed on an \\\"AS IS\\\" BASIS, WITHOUT WARRANTIES OR\\n// CONDITIONS OF ANY KIND, either express or implied. See the License for the\\n// specific language governing permissions and limitations under the License.\\n\\n/// @title Tree Library\\npragma abicoder v2;\\npragma solidity ^0.8.0;\\n\\nlibrary Tree {\\n    uint32 constant UINT32_MAX = 2**32 - 1;\\n    // count of trailing ones for [0:256)\\n    bytes constant trailing1table =\\n        hexn\\n    struct TreeCtx {\\n        Vertex[] vertices;\\n        uint32 deepestVertex;\\n        uint32 deepestDepth;\\n    }\\n\\n    struct Vertex {\\n        uint32[] ancestors; // pointers to ancestors' indices in the vertices array (tree)\\n        uint32 depth; // depth of the vertex in the tree\\n    }\\n\\n    // Because Tree is a library, the event is going to be emitted from the caller contract.\\n    // When there're multiple objects of this library,\\n    // we need this `_id` to differentiate one from another\\n    event VertexInserted(uint256 indexed _id, uint32 _parent);\\n\\n    // event VertexInserted(uint32 _index, Vertex _vertex);\\n\\n    /// @notice Insert a vertex to the tree\\n    /// @param _tree pointer to the tree storage\\n    /// @param _id the identifier to differentiate each tree from caller contract\\n    /// @param _parent the index of parent vertex in the vertices array (tree)\\n    /// @return index of the inserted vertex\\n    function insertVertex(\\n        TreeCtx storage _tree,\\n        uint256 _id,\\n        uint32 _parent\\n    ) public returns (uint32) {\\n        Vertex memory v;\\n        uint32 treeSize = uint32(_tree.vertices.length);\\n\\n        if (treeSize == 0) {\\n            // insert the very first vertex into the tree\\n            v = Vertex(new uint32[](0), 0);\\n        } else {\\n            // insert vertex to the tree attaching to another vertex\\n            require(\\n                _parent < treeSize,\\n                \\\"parent index exceeds current tree size\\\"\\n            );\\n\\n            uint32 parentDepth = _tree.vertices[_parent].depth;\\n            // calculate all ancestors' depths of the new vertex\\n            uint32[] memory requiredDepths = getRequiredDepths(parentDepth + 1);\\n            uint32[] memory ancestors = new uint32[](requiredDepths.length);\\n\\n            // construct the ancestors array by getting index of each ancestor in requiredDepths\\n            for (uint32 i = 0; i < requiredDepths.length; ++i) {\\n                ancestors[i] = getAncestorAtDepth(\\n                    _tree,\\n                    _parent,\\n                    requiredDepths[i]\\n                );\\n            }\\n\\n            v = Vertex(ancestors, parentDepth + 1);\\n        }\\n\\n        _tree.vertices.push(v);\\n\\n        if (v.depth > _tree.deepestDepth) {\\n            _tree.deepestDepth = v.depth;\\n            _tree.deepestVertex = treeSize;\\n        }\\n\\n        emit VertexInserted(_id, _parent);\\n\\n        return treeSize;\\n    }\\n\\n    /// @notice Search an ancestor of a vertex in the tree at a certain depth\\n    /// @param _tree pointer to the tree storage\\n    /// @param _vertex the index of the vertex in the vertices array (tree)\\n    /// @param _depth the depth of the ancestor\\n    /// @return index of ancestor at depth of _vertex\\n    function getAncestorAtDepth(\\n        TreeCtx storage _tree,\\n        uint32 _vertex,\\n        uint32 _depth\\n    ) public view returns (uint32) {\\n        require(\\n            _vertex < _tree.vertices.length,\\n            \\\"vertex index exceeds current tree size\\\"\\n        );\\n        require(\\n            _depth <= _tree.vertices[_vertex].depth,\\n            \\\"search depth deeper than vertex depth\\\"\\n        );\\n\\n        uint32 vertex = _vertex;\\n\\n        while (_depth != _tree.vertices[vertex].depth) {\\n            uint32[] storage ancestorsOfVertex = _tree\\n            .vertices[vertex]\\n            .ancestors;\\n            uint32 ancestorsLength = uint32(ancestorsOfVertex.length);\\n            // start searching from the oldest ancestor (smallest depth)\\n            // example: search ancestor at depth d(20, b'0001 0100) from vertex v at depth (176, b'1011 0000)\\n            //    b'1011 0000 -> b'1010 0000 -> b'1000 0000\\n            // -> b'0100 0000 -> b'0010 0000 -> b'0001 1000\\n            // -> b'0001 0100\\n\\n            // given that ancestorsIndex is unsigned, when -1 at 0, it'll underflow and become UINT32_MAX\\n            // so the continue condition has to be ancestorsIndex < ancestorsLength,\\n            // can't be ancestorsIndex >= 0\\n            unchecked {\\n                for (\\n                    uint32 ancestorsIndex = ancestorsLength - 1;\\n                    ancestorsIndex < ancestorsLength;\\n                    --ancestorsIndex\\n                ) {\\n                    vertex = ancestorsOfVertex[ancestorsIndex];\\n\\n                    // stop at the ancestor who's closest to the target depth\\n                    if (_tree.vertices[vertex].depth >= _depth) {\\n                        break;\\n                    }\\n                }\\n            }\\n        }\\n\\n        return vertex;\\n    }\\n\\n    /// @notice Get depth of vertex\\n    /// @param _tree pointer to the tree storage\\n    /// @param _vertex the index of the vertex in the vertices array (tree)\\n    function getDepth(TreeCtx storage _tree, uint32 _vertex)\\n        public\\n        view\\n        returns (uint32)\\n    {\\n        return getVertex(_tree, _vertex).depth;\\n    }\\n\\n    /// @notice Get vertex from the tree\\n    /// @param _tree pointer to the tree storage\\n    /// @param _vertex the index of the vertex in the vertices array (tree)\\n    function getVertex(TreeCtx storage _tree, uint32 _vertex)\\n        public\\n        view\\n        returns (Tree.Vertex memory)\\n    {\\n        require(\\n            _vertex < _tree.vertices.length,\\n            \\\"vertex index exceeds current tree size\\\"\\n        );\\n\\n        return _tree.vertices[_vertex];\\n    }\\n\\n    /// @notice Get current tree size\\n    /// @param _tree pointer to the tree storage\\n    function getTreeSize(TreeCtx storage _tree) public view returns (uint32) {\\n        return uint32(_tree.vertices.length);\\n    }\\n\\n    /// @notice Get current tree size\\n    /// @param _tree pointer to the tree storage\\n    /// @return index number and depth of the deepest vertex\\n    function getDeepest(TreeCtx storage _tree)\\n        public\\n        view\\n        returns (uint32, uint32)\\n    {\\n        return (_tree.deepestVertex, _tree.deepestDepth);\\n    }\\n\\n    function getRequiredDepths(uint32 _depth)\\n        private\\n        pure\\n        returns (uint32[] memory)\\n    {\\n        // parent is always included in the ancestors\\n        uint32 depth = _depth - 1;\\n        uint32 count = 1;\\n\\n        // algorithm 1\\n        // get count of trailing ones of _depth from trailing1table\\n        for (uint256 i = 0; i < 4; ++i) {\\n            uint32 partialCount = uint8(trailing1table[depth >> (i * 8) & 0xff]);\\n            count = count + partialCount;\\n            if (partialCount != 8) {\\n                break;\\n            }\\n        }\\n\\n        // algorithm 2\\n        // get count of trailing ones by counting them\\n        // {\\n        //     while (depth & 1 > 0) {\\n        //         depth = depth >> 1;\\n        //         ++count;\\n        //     }\\n\\n        //     depth = _depth - 1;\\n        // }\\n\\n        uint32[] memory depths = new uint32[](count);\\n\\n        // construct the depths array by removing the trailing ones from lsb one by one\\n        // example _depth = b'1100 0000: b'1011 1111 -> b'1011 1110 -> b'1011 1100\\n        //                            -> b'1011 1000 -> b'1011 0000 -> b'1010 0000\\n        //                            -> b'1000 0000\\n        for (uint32 i = 0; i < count; ++i) {\\n            depths[i] = depth;\\n            depth = depth & (UINT32_MAX << (i + 1));\\n        }\\n\\n        return depths;\\n    }\\n}\\n\",\"keccak256\":\"0x086048849655fa6dc92ce70f2775aa5ad5045896dd33fc9ea0a4f062cce50e2e\",\"license\":\"Apache-2.0\"}},\"version\":1}",
  "storageLayout": {
    "storage": [],
    "types": null
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "getAncestorAtDepth(Tree.TreeCtx storage,uint32,uint32)": {
        "notice": "Search an ancestor of a vertex in the tree at a certain depth"
      },
      "getDeepest(Tree.TreeCtx storage)": {
        "notice": "Get current tree size"
      },
      "getDepth(Tree.TreeCtx storage,uint32)": {
        "notice": "Get depth of vertex"
      },
      "getTreeSize(Tree.TreeCtx storage)": {
        "notice": "Get current tree size"
      },
      "getVertex(Tree.TreeCtx storage,uint32)": {
        "notice": "Get vertex from the tree"
      },
      "insertVertex(Tree.TreeCtx storage,uint256,uint32)": {
        "notice": "Insert a vertex to the tree"
      }
    },
    "version": 1
  }
}